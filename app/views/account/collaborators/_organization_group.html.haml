- if multi_organizations? || @member.user.memberships.count > 1
  #organization_group.tab-pane{ class: ('active' if params[:tab] == 'organization_group') }
    %p Gérer les accès du collaborateur aux différentes organisations. Supprimer l'accès à une organisation ne supprime pas le compte, seulement les droits d'accès à l'organisation.

    %table.table.table-striped.table-condensed
      %thead
        %th Organisation
        %th Code
        %th Rôle
        %th Action
      %tbody
        - accessible_organizations_for_user(@member.user).each do |organization|
          %tr
            %td= organization.name
            - membership = Member.find_by(organization: organization, user: @member.user)
            - if membership
              %td= membership.code
              %td= t('activerecord.models.member.attributes.role_values.' + membership.role)
              %td
                - if membership.organization != @organization
                  = link_to icon_destroy + "Retirer l'accès à cette organisation", remove_from_organization_account_organization_collaborator_path(@organization, @member, oid: organization.id), class: 'btn btn-mini', data: { method: :delete, confirm: t('actions.confirm') }
                - elsif @member.user.memberships.count > 1
                  = link_to icon_destroy + "Retirer l'accès à l'organisation", remove_from_organization_account_organization_collaborator_path(@organization, @member, oid: organization.id), class: 'btn btn-danger btn-mini', data: { method: :delete, confirm: t('actions.confirm') }
                - else
                  %i Ne peut supprimer le seul accès de ce collaborateur.
            - else
              %td -
              %td
                %i N'est pas membre de cette organisation
              %td= link_to icon_new + "Ajouter l'accès à cette organisation", add_to_organization_account_organization_collaborator_path(@organization, @member, oid: organization.id), class: 'btn btn-mini', data: { method: :post, confirm: t('actions.confirm') }
