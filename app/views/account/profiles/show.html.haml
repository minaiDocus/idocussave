.container-fluid
  .alerts
    = render partial: 'shared/messages'

  .row-fluid
    .span3
      .row-fluid
        .span12
          = render partial: 'layouts/account/me/navigation'

    .span9
      - unless @user.try(:organization).try(:is_suspended) && @user.active?
        #change_password.row-fluid.pan{ class: (@active_panel == 'change_password' ? 'active' : '')}
          .span12
            .well.change_pass_parent
              %h3.aligncenter Changer mon mot de passe
              %br/
              .change_pass
                = form_for @user, :url => account_profile_path do |f|
                  - if flash[:alert].present?
                    .alert-container
                      .alert.alert-error
                        %a{ :class=>"close", "data-dismiss"=>"alert" } ×
                        %span
                          %ul
                            %li
                              Mots de passe invalides

                  != f.label "Mot de passe actuel :"
                  = f.password_field :current_password, :label => "Ancien mot de passe"
                  != f.label "Nouveau mot de passe :"
                  = f.password_field :password, :label => "Nouveau mot de passe"
                  != f.label "Confirmation du mot de passe :"
                  = f.password_field :password_confirmation, :label => "Confirmation du nouveau mot de passe"
                  != f.submit "Modifier", :class => "btn blue"

        - if @user.active? && !@user.is_prescriber
          #addresses_management.row-fluid.pan{ class: (@active_panel == 'addresses_management' ? 'active' : '')}
            .span12.well
              .row-fluid
                .span12
                  %h3.aligncenter Gestion des adresses
              %br
              .row-fluid
                .span4
                  = render partial: 'account/addresses/address', locals: { address: @user.billing_address, single: true, type: 'billing' }
                .span4
                  = render partial: 'account/addresses/address', locals: { address: @user.shipping_address, single: true, type: 'shipping' }
                .span4
                  = render partial: 'account/addresses/address', locals: { address: @user.kit_shipping_address, single: true, type: 'kit_shipping' }
              .row-fluid
                .span12.aligncenter.margin1top
                  = link_to 'Configurer', account_addresses_path, class: 'btn'

      - if @user.active?
        - if @user.is_prescriber || !@user.is_centralized
          #payment_management.row-fluid.pan{ class: (@active_panel == 'payment_management' ? 'active' : '')}
            .span12.well
              %h3.aligncenter Prélèvement
              %table.table.table-condensed.margin2top
                %tbody
                  %tr
                    %th Etat :
                    %td
                      - if @user.debit_mandate
                        - if @user.debit_mandate.transactionStatus == 'success'
                          %span.label.label-success OK
                        - else
                          %span.label.label-important Information non valide
                      - else
                        %span.label Non configuré
                  %tr
                    %th Banque :
                    %td= @user.debit_mandate.try(:bic)
              %form.aligncenter.margin0bottom{ method: :get, action: 'https://prlv.idocus.com/form.php' }
                %input{ name: :email, type: 'hidden', value: @user.email }
                %input.btn.btn-primary{ name: '', type: 'submit', value: 'Configurer' }

        - unless @user.try(:organization).try(:is_suspended)
          #efs_management.row-fluid.pan{ class: (@active_panel == 'efs_management' ? 'active' : '')}
            .span12.well
              %h3.aligncenter Stockage externe des documents
              - if @external_file_storage.authorized > 0
                %br
                - if @external_file_storage.is_dropbox_basic_authorized?
                  - service_number = ExternalFileStorage::F_DROPBOX
                  - is_service_used = @external_file_storage.is_used?(service_number)
                  .well
                    .row-fluid
                      .span12
                        != check_box_tag :enable_dropbox, 1, is_service_used, :id => "service_#{service_number}", :class => "checkbox use_service", :style => "float:left;margin-right:5px;margin-top:0;"
                        %b
                          != label_tag :"service_#{service_number}", "DROPBOX"
                    .row-fluid{ :class => "service_config_#{service_number} #{!is_service_used ? 'hide' : ''}" }
                      .span12
                        - if @external_file_storage.dropbox_basic.is_configured?
                          Votre compte iDocus est connecté à votre compte Dropbox.
                          != link_to "Paramètres", authorize_url_account_dropbox_path
                        - else
                          Pour connecter iDocus à votre compte Dropbox, cliquez
                          != link_to "ici", authorize_url_account_dropbox_path
                        #{"."}
                        = render partial: 'storage_form', locals: { instance: @external_file_storage.dropbox_basic }

                - if @external_file_storage.is_google_docs_authorized?
                  - service_number = ExternalFileStorage::F_GOOGLE_DOCS
                  - is_service_used = @external_file_storage.is_used?(service_number)
                  .well
                    .row-fluid
                      .span12
                        != check_box_tag :enable_google_docs, 1, is_service_used, :id => "service_#{service_number}", :class => "checkbox use_service", :style => "float:left;margin-right:5px;margin-top:0;"
                        %b
                          != label_tag :"service_#{service_number}", "GOOGLE DRIVE (Beta)"
                    .row-fluid{ :class => "service_config_#{service_number} #{!is_service_used ? 'hide' : ''}" }
                      .span12
                        - if @external_file_storage.google_doc.is_configured?
                          Votre compte iDocus est connecté à votre compte Google Drive.
                          = link_to "Paramètres", authorize_url_account_google_drive_path, method: :post
                        - else
                          Pour connecter iDocus à votre compte Google Drive, cliquez
                          = link_to "ici", authorize_url_account_google_drive_path, method: :post
                        #{"."}
                        = render partial: 'storage_form', locals: { instance: @external_file_storage.google_doc }

                - if @external_file_storage.is_ftp_authorized?
                  - service_number = ExternalFileStorage::F_FTP
                  - is_service_used = @external_file_storage.is_used?(service_number)
                  .well
                    .row-fluid
                      .span12
                        != check_box_tag :enable_ftp, 1, is_service_used, :id => "service_#{service_number}", :class => "checkbox use_service", :style => "float:left;margin-right:5px;margin-top:0;"
                        %b
                          != label_tag :"service_#{service_number}", "FTP"
                    .row-fluid{ :class => "service_config_#{service_number} #{!is_service_used ? 'hide' : ''}" }
                      .span12
                        - if @external_file_storage.ftp.is_configured?
                          Votre compte iDocus est connecté à votre compte FTP.
                          != link_to "Paramètres", "#ftpDialog", "data-toggle" => "modal"
                        - else
                          Pour connecter iDocus à votre compte FTP, cliquez
                          != link_to "ici", "#ftpDialog", "data-toggle" => "modal"
                        \.
                        = render partial: 'storage_form', locals: { instance: @external_file_storage.ftp }

                - if @external_file_storage.is_box_authorized?
                  - service_number = ExternalFileStorage::F_BOX
                  - is_service_used = @external_file_storage.is_used?(service_number)
                  .well
                    .row-fluid
                      .span12
                        != check_box_tag :enable_box, 1, is_service_used, :id => "service_#{service_number}", :class => "checkbox use_service", :style => "float:left;margin-right:5px;margin-top:0;"
                        %b
                          != label_tag :"service_#{service_number}", "BOX"
                    .row-fluid{ :class => "service_config_#{service_number} #{!is_service_used ? 'hide' : ''}" }
                      .span12
                        - if @external_file_storage.box.is_configured?
                          Votre compte iDocus est connecté à votre compte Box.
                          != link_to "Paramètres", authorize_url_account_box_path
                        - else
                          Pour connecter iDocus à votre compte Box, cliquez
                          != link_to "ici", authorize_url_account_box_path
                        #{"."}
                        = render partial: 'storage_form', locals: { instance: @external_file_storage.box }

            .modal.fade{ :id=>"ftpDialog", :style => "width:333px;height:250px;margin: -125px 0 0 -166px;" }
              .modal-header
                %a.close{ href: '#', data: { dismiss: 'modal' } } ×
                %h3 Configuration du service FTP
              %form.margin0bottom{ :action => configure_account_ftp_path, :method => "POST" }
                != hidden_field_tag "authenticity_token", form_authenticity_token
                .modal-body
                  %table
                    %tr
                      %td.alignright
                        != label_tag "ftp[host]", "Hôte : "
                      %td
                        != text_field_tag "ftp[host]", @external_file_storage.ftp.host
                    %tr
                      %td.alignright
                        != label_tag "ftp[login]", "Identifiant : "
                      %td
                        != text_field_tag "ftp[login]", @external_file_storage.ftp.login
                    %tr
                      %td.alignright
                        != label_tag "ftp[password]", "Mots de passe : "
                      %td
                        != password_field_tag "ftp[password]", @external_file_storage.ftp.password
                .modal-footer{ :style => "height: 29px;padding-bottom:12px;" }
                  != submit_tag "Valider", :class => "btn"
                  %a.btn{ href: '#', data: { dismiss: 'modal' } } Fermer

          - if @user.is_dematbox_authorized
            #idocus_box.row-fluid.pan{ class: (@active_panel == 'idocus_box' ? 'active' : '') }
              .span12
                .well
                  %h3.aligncenter.margin2bottom iDocus'Box
                  - if @user.dematbox.try(:services).try(:any?)
                    %h4.margin1bottom Liste des services
                    %table.table.table-striped.table-bordered.table-condensed.margin0bottom
                      %thead
                        %tr
                          %th Groupe
                          %th Nom
                      %tbody
                        - @user.dematbox.services.asc([:group_name, :name]).each do |service|
                          %tr
                            %td= service.group_name
                            %td= service.name
                  - elsif @user.dematbox.try(:beginning_configuration_at).present?
                    Configuration en cours...veuillez recharger votre page dans quelques secondes.
                  - else
                    = form_tag account_dematbox_path, method: :post, class: 'form-horizontal margin2top margin0bottom' do
                      .control-group.string
                        = label_tag :pairing_code, 'Code PIN', class: 'control-label string'
                        .controls
                          = text_field_tag :pairing_code, '', class: 'string'
                      .form-actions.margin0bottom.padding0bottom
                        = submit_tag t('actions.submit'), class: 'btn'

          #subscription_options.row-fluid.pan{ class: (@active_panel == 'subscription_options' ? 'active' : '')}
            .span12
              .well
                %h3.aligncenter Notification par mail
                = simple_form_for @user, url: account_profile_path, html: { id: 'subscription_options' } do |f|
                  = hidden_field_tag :panel, 'subscription_options'
                  - unless @user.is_prescriber
                    = f.input :is_reminder_email_active, as: :boolean, label: "oui, je veux recevoir des mails de relance pour ne pas oublier d'envoyer mes documents à numériser.", wrapper: :inline_checkbox
                  = f.input :is_document_notifier_active, as: :boolean, label: "oui, je veux recevoir des mails de notification lorsque de nouveaux documents sont disponibles", wrapper: :inline_checkbox
                  - unless @user.is_prescriber
                    = f.input :is_mail_receipt_activated, as: :boolean, label: "oui, je veux recevoir un mail de confirmation lorsque la plateforme reçoit avec succès un document que j’ai envoyé par mail", wrapper: :inline_checkbox
                  .form-actions
                    = f.submit 'Valider', class: 'btn'

          - if @user.is_prescriber || !@user.is_centralized
            #invoices.row-fluid.pan{ class: (@active_panel == 'invoices' ? 'active' : '')}
              .span12
                .well
                  %h3.aligncenter Factures
                  %table.table.table-bordered.table-striped
                    %thead
                      %tr
                        %th Numéro
                        %th Montant
                        %th Actions
                    %tbody
                      - @invoices.each do |invoice|
                        %tr
                          %td= invoice.number
                          %th.price
                            - if invoice.amount_in_cents_w_vat
                              = "#{format_price_00(invoice.amount_in_cents_w_vat)} €"
                          %td.actions
                            = link_to icon_show, invoice.content.url, class: 'do-showInvoice', title: "#{invoice.number}.pdf"
                            = icon_link_to invoice.content.url, { icon: 'download' }, { target: '_blank' }
                  = paginate @invoices
              #showInvoice.modal.hide.fade
                .modal-header
                  %a.close{ data: { dismiss: :modal } } ×
                  %h3
                .modal-body
                  %iframe{ :src => '' }

          - unless @user.is_admin || @user.is_prescriber || @user.inactive?
            - period_service = PeriodService.new user: @user, current_time: Time.now.beginning_of_month
            #emailed_documents.row-fluid.pan{ class: (@active_panel == 'emailed_documents' ? 'active' : '')}
              .span12
                .well
                  %h3.aligncenter Adresse email d'envoi de documents
                  %br
                  Vous pouvez envoyer vos pièces comptables par mail.
                  %br
                  La plateforme iDocus intégrera les pièces jointes (uniquement au format pdf) de votre mail.
                  %br
                  %br
                  Règles d'utilisation :
                  %ul
                    %li
                      Format de l’objet du mail : [libellé court du journal comptable] [période]
                      - if @user.account_book_types.first && period_service.names.first
                        %br
                        exemple :
                        %b
                          %i #{@user.account_book_types.first.name} #{period_service.names.first}
                    %li La somme des tailles des pièces jointes de votre mail ne doit pas dépasser 20 Mo.
                  Vos journaux comptables accessibles :
                  %ul
                    - @user.account_book_types.each do |journal|
                      %li
                        %b= journal.name
                        = "(#{journal.description.sub(/^\s*\(/,'').sub(/\)\s*$/,'')})"
                  Vos périodes actuellement accessibles :
                  %ul
                    - period_service.names.each do |name|
                      %li
                        %b= name
                  Voici votre adresse personnalisée à laquelle vous devez envoyer vos pièces :
                  %b{ style: 'font-size: 16px;' }
                    = "#{@user.email_code}@fw.idocus.com"
                  = link_to 'Générer une nouvelle adresse', regenerate_code_account_emailed_documents_path, class: 'btn btn-mini btn-primary', data: { method: :post }, style: 'position:relative;top:-2px;'

= render "help"
