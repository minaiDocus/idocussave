.box
  .row.derivationRight
    .col-md-6
      %h3
        Opérations bancaires
        - if @operations
          %span.badge.badge-info.fs-origin= @operations.total_count
    .col-md-6
      - if current_user.has_collaborator_action? && !@account.try(:options).try(:operation_processing_forced?)
        = link_to "Forcer la pré-affectation de #{@waiting_operations_count} opération(s)", force_processing_account_retrieved_banking_operations_path(banking_operation_contains: params.permit(:banking_operation_contains)[:banking_operation_contains]), method: :post, class: 'btn btn-danger float-right margin1right', data: { confirm: "Ces opérations peuvent encore être modifiés par la/les banque(s). Êtes-vous sûr ?" }
.row.retractable.with-filter.derivationLeft
  .col-md-12.retractable-content
    .box
      = render partial: 'shared/list_options', locals: { collection: @operations }
      %table.table.table-bordered-inner.table-condensed.table-striped.margin1top.margin1bottom.table-detachable-head
        %thead
          %tr.bg-brown.text-white
            %th= sortable :date,                     'Date Op'
            %th= sortable 'bank_accounts.bank_name', 'Service'
            %th= sortable 'bank_accounts.number',    'Compte'
            %th= sortable :category,                 'Catégorie'
            %th= sortable :label,                    'Libellé'
            %th.amount= sortable :amount,            'Montant'
            - if current_user.pre_assignement_displayed?
              %th Pré-affecté
        %tbody.retractable.slidedown
          - @operations.each do |operation|
            %tr
              %td= l(operation.date, format: '%d %b %Y')
              %td= operation.bank_account.bank_name if operation.bank_account
              %td= operation.bank_account.number    if operation.bank_account
              %td= operation.category
              %td= operation.label
              %td.amount= format_price_00((operation.amount * 100).round) + " #{operation.currency["symbol"] || operation.bank_account && operation.bank_account.original_currency['symbol'] || '€'}"
              - if current_user.pre_assignement_displayed?
                %td= is_operation_pre_assigned(operation)
      = render partial: 'shared/list_options', locals: { collection: @operations }

  .card.retractable-filter
    = form_tag account_retrieved_banking_operations_path, method: :get, class: 'form-filter' do
      .card-header.clearfix
        .float-left
          %h3 Filtres
        .float-right.margin1left
          %a.locker{ href: "#", title: "Cacher le Filtre" }= glyphicon('layers')
      .retractable-filter-content
        .card-body
          .form-group.clearfix
            .label-section
              = label_tag 'banking_operation_contains[date][>=]', 'Date de début'
            .control-section
              .filter-date
                .input-append.date.datepicker
                  %span.add-on.badge.badge-secondary.fs-origin.mr-md-1
                    >=
                  = text_field_tag 'banking_operation_contains[date][>=]', (params[:banking_operation_contains][:date]['>='] rescue ''), class: 'input-small'
          .form-group.clearfix
            .label-section
              = label_tag 'banking_operation_contains[date][<=]', 'Date de fin'
            .control-section
              .filter-date
                .input-append.date.datepicker
                  %span.add-on.badge.badge-secondary.fs-origin.mr-md-1
                    <=
                  = text_field_tag 'banking_operation_contains[date][<=]', (params[:banking_operation_contains][:date]['<='] rescue ''), class: 'input-small'
          .form-group.clearfix
            .label-section
              = label_tag 'banking_operation_contains[bank_account][bank_name]', 'Service'
            .control-section
              = text_field_tag 'banking_operation_contains[bank_account][bank_name]', (params[:banking_operation_contains][:bank_account][:bank_name] rescue '')
          .form-group.clearfix
            .label-section
              = label_tag 'banking_operation_contains[bank_account][number]', 'Compte'
            .control-section
              = text_field_tag 'banking_operation_contains[bank_account][number]',    (params[:banking_operation_contains][:bank_account][:number] rescue '')
          .form-group.clearfix
            .label-section
              = label_tag 'banking_operation_contains[category]', 'Catégorie'
            .control-section
              = text_field_tag 'banking_operation_contains[category]', (params[:banking_operation_contains][:category] rescue '')
          .form-group.clearfix
            .label-section
              = label_tag 'banking_operation_contains[label]', 'Libellé'
            .control-section
              = text_field_tag 'banking_operation_contains[label]',    (params[:banking_operation_contains][:label] rescue '')
          - if current_user.collaborator?
            .form-group.clearfix
              .label-section
                = label_tag 'banking_operation_contains[pre_assigned]', 'Pré-affectation'
              .control-section
                = select_tag 'banking_operation_contains[pre_assigned]', options_for_select({"" => "", "Oui" => "pre_assigned", "Non" => "not_pre_assigned", "En attente" => "is_waiting"}, (params[:banking_operation_contains][:pre_assigned] rescue nil))
        .card-footer
          .form-actions
            = submit_tag t('filters.action'), class: 'btn btn-primary'
            - if current_user.is_admin && params[:banking_operation_contains].present?
              = link_to 'Débloquer les opérations', unlock_operations_account_retrieved_banking_operations_path(banking_operation_contains: params.permit(:banking_operation_contains)[:banking_operation_contains]), method: :post, class: 'btn btn-danger', data: { confirm: "Êtes-vous sûr de vouloir débloquer ces opérations?"}
            = link_to glyphicon('x'), account_retrieved_banking_operations_path, class: 'btn btn-light'
