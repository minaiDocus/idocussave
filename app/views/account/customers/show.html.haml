#customer
  .row-fluid
    .span12
      .row-fluid
        .span12.box
          .row-fluid
            .span8
              - if @customer.inactive?
                %span.label.label-important.pull-left.margin1right.closed_account Dossier clôturé
              %h3= @customer.info
            .span4.alignright
              - if @customer.active? && @user.is_admin
                = link_to icon_not_ok + ' Clôturer le dossier', account_close_confirm_account_organization_customer_path(@organization, @customer), class: 'btn btn-danger'

      .row-fluid
        .span12.box
          %ul.nav.nav-tabs
            %li{ class: ('active' if params[:tab] == 'information' || params[:tab].blank? ) }
              %a{ href: '#information', data: { toggle: 'tab' } } Information
            %li{ class: ('active' if params[:tab] == 'addresses') }
              %a{ href: '#addresses', data: { toggle: 'tab' } } Adresses
            - if @customer.active?
              %li{ class: ('active' if params[:tab] == 'subscription') }
                %a{ href: '#subscription', data: { toggle: 'tab' } } Abonnement
              %li{ class: ('active' if params[:tab] == 'period_options') }
                %a{ href: '#period_options', data: { toggle: 'tab' } } Options des périodes
            - if @organization.ibiza.try(:is_configured?)
              %li{ class: ('active' if params[:tab] == 'ibiza') }
                %a{ href: '#ibiza', data: { toggle: 'tab' } } Ibiza
            %li{ class: ('active' if params[:tab] == 'journals') }
              %a{ href: '#journals', data: { toggle: 'tab' } } Journaux comptables
            - if @customer.active? && @customer.is_fiduceo_authorized
              %li{ class: ('active' if params[:tab] == 'retrievers') }
                %a{ href: '#retrievers', data: { toggle: 'tab' } } Automates
              - if @customer.fiduceo_retrievers.banks.count > 0
                %li{ class: ('active' if params[:tab] == 'bank_accounts') }
                  %a{ href: '#bank_accounts', data: { toggle: 'tab' } } Comptes bancaires
            - if @organization.ibiza.try(:token).blank?
              %li{ class: ('active' if params[:tab] == 'others') }
                %a{ href: '#others', data: { toggle: 'tab' } } Divers
            - if @user.is_admin
              %li{ class: ('active' if params[:tab] == 'csv_outputter') }
                %a{ href: '#csv_outputter', data: { toggle: 'tab' } } Format de sortie CSV
              - if @customer.active?
                %li{ class: ('active' if params[:tab] == 'file_storages') }
                  %a{ href: '#file_storages', data: { toggle: 'tab' } } Stockages externes

          .tab-content
            #information.tab-pane{ class: ('active' if params[:tab] == 'information' || params[:tab].blank?) }
              %table.table.table-striped.table-condensed
                %thead
                  %tbody
                    %tr
                      %th= t('mongoid.models.common.attributes.created_at')
                      %td= l(@customer.created_at)
                    %tr
                      %th= t('mongoid.models.user.attributes.email')
                      %td= @customer.email
                    %tr
                      %th= t('mongoid.models.user.attributes.first_name')
                      %td= @customer.first_name
                    %tr
                      %th= t('mongoid.models.user.attributes.last_name')
                      %td= @customer.last_name
                    %tr
                      %th= t('mongoid.models.user.attributes.code')
                      %td= @customer.code
                    %tr
                      %th= t('mongoid.models.user.attributes.knowings_code')
                      %td= @customer.knowings_code
                    %tr
                      %th= t('mongoid.models.user.attributes.knowings_visibility')
                      %td= knowings_visibility @customer.knowings_visibility
                    %tr
                      %th= t('mongoid.models.user.attributes.company')
                      %td= @customer.company
                    %tr
                      %th= t('mongoid.models.user.attributes.is_centralized')
                      %td= @customer.is_centralized ? t('yes_value') : t('no_value')
                    %tr
                      %th= t('mongoid.models.user_options.attributes.is_taxable')
                      %td= @customer.options.is_taxable ? t('yes_value') : t('no_value')
                    %tr
                      %th= t('mongoid.models.user_options.attributes.is_pre_assignment_date_computed')
                      %td= @customer.options.pre_assignment_date_computed? ? t('yes_value') : t('no_value')
              - if @customer.active?
                .row-fluid
                  .span12
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            #addresses.tab-pane{ class: ('active' if params[:tab] == 'addresses') }
              .row-fluid.margin1bottom
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.billing_address,  single: true, type: 'billing' }
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.shipping_address, single: true, type: 'shipping' }
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.kit_shipping_address, single: true, type: 'kit_shipping' }
              - if @customer.active?
                .row-fluid
                  .span12.aligncenter
                    = link_to icon_edit + ' ' + 'Configurer', account_organization_customer_addresses_path(@organization, @customer), class: 'btn btn-primary'
            - if @customer.active?
              #subscription.tab-pane{ class: ('active' if params[:tab] == 'subscription') }
                %h4= @subscription.period_duration == 1 ? 'Périodicité mensuelle' : 'Périodicité trimestrielle'
                %br
                = render partial: 'options'
                .row-fluid.margin1top
                  .span12
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_account_organization_customer_subscription_path(@organization, @customer), class: 'btn btn-primary pull-right'
              #period_options.tab-pane{ class: ('active' if params[:tab] == 'period_options') }
                %table.table.table-striped.table-condensed
                  %tbody
                    %tr
                      %th= t('mongoid.models.user.attributes.authd_prev_period')
                      %td= @customer.authd_prev_period
                    %tr
                      %th= t('mongoid.models.user.attributes.auth_prev_period_until_day')
                      %td= @customer.auth_prev_period_until_day
                    - if @user.is_admin
                      %tr
                        %th= t('mongoid.models.user.attributes.auth_prev_period_until_month')
                        %td= @customer.auth_prev_period_until_month
                .row-fluid
                  .span12
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_period_options_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            - if @organization.ibiza.try(:is_configured?)
              #ibiza.tab-pane{ class: ('active' if params[:tab] == 'ibiza') }
                %table.table.table-striped.table-condensed
                  %tbody
                    %tr
                      %th= t('mongoid.models.user.attributes.ibiza_id')
                      - users = @organization.ibiza.users
                      - if @customer.ibiza_id.nil?
                        %td
                          %i Aucun
                      - elsif users.is_a?(Array)
                        %td= users.select { |e| e.id == @customer.ibiza_id }.first.try(:name)
                      - elsif users.nil?
                        %td
                          %span.label Rafraîchissement en cours
                      - else
                        %td
                          %span.label.label-important Erreur
                    %tr
                      %th= t('mongoid.models.user_options.attributes.is_auto_deliver')
                      %td= @customer.options.auto_deliver? ? t('yes_value') : t('no_value')
                .row-fluid
                  .span12
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_ibiza_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            #journals.tab-pane{ class: ('active' if params[:tab] == 'journals') }
              - if @pending_journals.present?
                .alert
                  %strong Attention!
                  Les journaux suivants sont assignés aux automates de récupération mais ne sont pas configurés :
                  != @pending_journals.map { |j| content_tag(:strong, j) }.join(', ')
              %table.table.table-striped.table-bordered.table-condensed
                %thead
                  %tr
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Libellé court
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Libellé long
                    %th.aligncenter{ colspan: 3 } Traitement Pré-Saisie ou NDF
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Automates
                    - if (is_leader? || @user.rights.is_customer_journals_management_authorized) && @customer.active?
                      %th{ rowspan: 2, style: 'vertical-align:middle' } Actions
                  %tr
                    %th Type
                    %th N°
                    %th Compte charge
                %tbody
                  - @journals.each do |journal|
                    %tr
                      %td= journal.name
                      %td= journal.description
                      %td= t("mongoid.models.account_book_type.attributes.entry_type_#{journal.entry_type}")
                      %td= journal.account_number
                      %td= journal.charge_account
                      %td= journal.fiduceo_retrievers.count
                      - if (is_leader? || @user.rights.is_customer_journals_management_authorized) && @customer.active?
                        %td
                          = link_to icon_edit, edit_account_organization_customer_journal_path(@organization, @customer, journal), class: 'btn btn-mini'
                          = link_to icon_destroy, account_organization_customer_journal_path(@organization, @customer, journal), method: 'delete', data: { confirm: t('actions.confirm') }, class: 'btn btn-mini'
              .row-fluid
                .span6
                  Pré-affectation comptable :
                  %span.label= @customer.options.is_preassignment_authorized ? t('yes_value') : t('no_value')
                  %span.margin2left
                  Total :
                  %span.label= @customer.account_book_types.count
                  %span.margin2left
                  Total autorisé :
                  %span.label= @customer.options.max_number_of_journals
                .span6.alignright
                  - if @customer.active? && (is_leader? || @user.rights.is_customer_journals_management_authorized)
                    - if is_max_number_of_journals_reached?
                      = link_to icon(icon: 'plus') + ' ' + t('actions.new'), '#', class: 'btn btn-primary', disabled: 'disabled'
                      = link_to icon(icon: 'th-large') + ' Copier',            '#', class: 'btn btn-primary', disabled: 'disabled'
                    - elsif @customer.active?
                      = link_to icon(icon: 'plus') + ' ' + t('actions.new'), new_account_organization_customer_journal_path(@organization, @customer), class: 'btn btn-primary'
                      = link_to icon(icon: 'th-large') + ' Copier', select_account_organization_customer_journals_path(@organization, @customer), class: 'btn btn-primary'
            - if @customer.active? && @customer.is_fiduceo_authorized
              #retrievers.tab-pane{ class: ('active' if params[:tab] == 'retrievers') }
                = link_to 'Liste des transactions', account_organization_customer_retriever_transactions_path(@organization, @customer), class: 'btn margin1right'
                = link_to 'Liste des opérations bancaires', account_organization_customer_retrieved_banking_operations_path(@organization, @customer), class: 'btn margin1right'
                = link_to 'Liste des documents', account_organization_customer_retrieved_documents_path(@organization, @customer), class: 'btn'
                %table.table.table-condensed.table-striped.margin2top.margin0bottom
                  %thead
                    %tr
                      %th= t('mongoid.models.common.attributes.created_at')
                      %th= t('mongoid.models.common.attributes.updated_at')
                      %th= t('mongoid.models.fiduceo_retriever.attributes.type')
                      %th= t('mongoid.models.fiduceo_retriever.attributes.service_name')
                      %th= t('mongoid.models.fiduceo_retriever.attributes.name')
                      %th Journal
                      %th Mode
                      %th.retriever_state= t('mongoid.models.fiduceo_retriever.attributes.state')
                  %tbody
                    - @customer.fiduceo_retrievers.asc(:created_at).each do |retriever|
                      - present retriever do |retriever_presenter|
                        %tr
                          %td= l(retriever.created_at, format: '%d %b %Y %H:%M')
                          %td= l(retriever.updated_at, format: '%d %b %Y %H:%M')
                          %td= t("mongoid.models.fiduceo_retriever.attributes.type_values.#{retriever_presenter.type}")
                          %td= retriever_presenter.service_name
                          %td= retriever_presenter.name
                          %td= retriever_presenter.journal.try(:name) || '-'
                          %td= retriever_presenter.mode
                          %td.retriever_state!= retriever_presenter.state
              - if @customer.fiduceo_retrievers.banks.count > 0
                #bank_accounts.tab-pane{ class: ('active' if params[:tab] == 'bank_accounts') }
                  %table.table.table-striped.table-condensed.margin0bottom
                    %tr
                      %th= t('mongoid.models.bank_account.attributes.bank_name')
                      %th= t('mongoid.models.bank_account.attributes.name')
                      %th= t('mongoid.models.bank_account.attributes.number')
                      %th= t('mongoid.models.bank_account.attributes.journal')
                      %th= t('mongoid.models.bank_account.attributes.accounting_number')
                      %th Action
                    - @customer.bank_accounts.each do |bank_account|
                      %tr
                        %td= bank_account.bank_name
                        %td= bank_account.name
                        %td= bank_account.number
                        %td= bank_account.journal
                        %td= bank_account.accounting_number
                        %td= icon_link_to edit_account_organization_customer_bank_account_path(@organization, @customer, bank_account), { icon: 'edit' }, { class: 'btn btn-mini' }
            - if @organization.ibiza.try(:token).blank?
              #others.tab-pane{ class: ('active' if params[:tab] == 'others') }
                .row-fluid
                  .span12.aligncenter
                    - if @customer.active?
                      = link_to 'Plan comptable', account_organization_customer_accounting_plan_path(@organization, @customer), class: 'btn'
                      = link_to 'Paramètrage des TVA', account_organization_customer_accounting_plan_vat_accounts_path(@organization, @customer), class: 'btn'
                    = link_to 'Exercices comptables', account_organization_customer_exercices_path(@organization, @customer), class: 'btn'
            - if @user.is_admin
              #csv_outputter.tab-pane{ class: ('active' if params[:tab] == 'csv_outputter') }
                .aligncenter
                  = link_to icon_edit + ' ' + t('actions.edit'), edit_account_organization_customer_csv_outputter_path(@organization, @customer), class: 'btn btn-primary'
              - if @customer.active?
                #file_storages.tab-pane{ class: ('active' if params[:tab] == 'file_storages') }
                  = render partial: 'account/customers/file_storages', locals: { user: @customer }
                  .alignright
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_account_organization_customer_file_storage_authorizations_path(@organization, @customer), class: 'btn btn-primary'
