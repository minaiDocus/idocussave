.container-fluid
  = render 'shared/as_user'

  .alerts
    = render partial: 'shared/messages'

  = render partial: 'navigation'

  .row-fluid
    .span12.pannel
      .row-fluid
        .span12
          .pull-left
            %h2= @user.info
          .pull-right
            - if !@user.update_request.try(:values).try(:[],'is_inactive').nil?
              - if @user.update_request.try(:values).try(:[],'is_inactive')
                = "(Arrêt en attente de validation par iDocus)"
              - else
                = "(Rétablissement en attente de validation par iDocus)"
            - if @user.is_editable
              - if @user.is_active? && !@user.update_request.try(:values).try(:[],:is_inactive)
                = link_to "Arrêter l'abonnement", stop_using_account_user_path(@user), class: 'btn btn-danger', method: 'PUT', data: { confirm: "Vous allez arrêter l'abonnement de cet utilisateur à partir du début du mois prochain." }
              - else
                = link_to "Rétablir l'abonnement", restart_using_account_user_path(@user), class: 'btn btn-danger', method: 'PUT', data: { confirm: "Vous allez rétablir l'abonnement de cet utilisateur." }
      .row-fluid
        .span6
          .row-fluid
            .span12.well
              %h3.aligncenter Information
              %table.table.table-bordered.table-striped
                %thead
                  %tbody
                    %tr
                      %th= t('mongoid.models.user.attributes.email')
                      %td= render partial: 'account/shared/cell', locals: { instance: @user, key: 'email' }
                    %tr
                      %th= t('mongoid.models.user.attributes.first_name')
                      %td= render partial: 'account/shared/cell', locals: { instance: @user, key: 'first_name' }
                    %tr
                      %th= t('mongoid.models.user.attributes.last_name')
                      %td= render partial: 'account/shared/cell', locals: { instance: @user, key: 'last_name' }
                    %tr
                      %th= t('mongoid.models.user.attributes.code')
                      %td= render partial: 'account/shared/cell', locals: { instance: @user, key: 'code' }
                    %tr
                      %th= t('mongoid.models.user.attributes.company')
                      %td= render partial: 'account/shared/cell', locals: { instance: @user, key: 'company' }
              - if @user.is_editable
                = link_to t('actions.edit'), edit_account_user_path(@user), class: 'btn pull-right'
          
          .row-fluid
            .span12.well
              %h3.aligncenter Abonnement
              %hr
              %h4.aligncenter
                Configuration actuelle
                = @subscription.period_duration == 1 ? '(Périodicité mensuelle)' : '(Périodicité trimestrielle)'
              = render partial: 'options'

              - if @subscription.is_update_requested?
                %h4.aligncenter
                  Configuration souhaitée
                  = @subscription.period_duration == 1 ? '(Périodicité mensuelle)' : '(Périodicité trimestrielle)'
                = render partial: 'requested_options'
              - if @user.is_editable
                = link_to t('actions.edit'), edit_account_subscription_path(@user), class: 'btn pull-right'
              
        .span6
          .row-fluid
            .span12.well
              %h3.aligncenter Gestion des adresses
              .row-fluid
                .span6
                  = render partial: 'account/addresses/address', locals: { address: @user.billing_address,  single: true, is_for_billing: true }
                .span6
                  = render partial: 'account/addresses/address', locals: { address: @user.shipping_address, single: true, is_for_billing: false }
              .row-fluid
                .span12.aligncenter
                  = link_to 'Configurer', account_user_addresses_path(@user), class: 'btn'
          .row-fluid
            .span12.well
              %h3.aligncenter Journaux comptable
              %table.table.table-striped.table-bordered.table-condensed.margin1top
                %thead
                  %tr
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Libellé court
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Libellé long
                    %th{ colspan: 3 } Traitement Pré-Saisie ou NDF
                    - if @possessed_user.is_editable
                      %th{ rowspan: 2, style: 'vertical-align:middle' } Actions
                  %tr
                    %th Type
                    %th N°
                    %th Compte charge
                %tbody
                  - @journals.each do |journal|
                    - journal.update_request.try(:apply)
                    %tr{ id: journal.slug }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'name' }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'description' }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'entry_type', is_translatable: true }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'account_number' }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'charge_account' }
                      - if @possessed_user.is_editable
                        %td
                          = link_to icon_edit, edit_account_account_book_type_path(journal)
                          = icon_link_to edit_requested_users_account_account_book_type_path(journal), { icon: 'user' }, { title: 'Clients concernés' }