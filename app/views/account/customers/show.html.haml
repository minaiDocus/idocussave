#customer
  .row-fluid
    .span12
      .row-fluid
        .span12.box
          .row-fluid
            .span12
              .pull-left
                %h3= @customer.info
              .pull-right
                - if @customer.is_inactive != @customer.is_inactive_was
                  - if @customer.is_inactive
                    = "(Arrêt en attente de validation par iDocus)"
                  - else
                    = "(Rétablissement en attente de validation par iDocus)"
                - if can_edit?
                  - if @customer.is_active? && @customer.is_inactive == @customer.is_inactive_was
                    = link_to "Arrêter l'abonnement", stop_using_account_organization_customer_path(@customer), class: 'btn btn-danger', method: :put, data: { confirm: "Vous allez arrêter l'abonnement de cet utilisateur à partir du début du mois prochain." }
                  - else
                    = link_to "Rétablir l'abonnement", restart_using_account_organization_customer_path(@customer), class: 'btn btn-danger', method: :put, data: { confirm: "Vous allez rétablir l'abonnement de cet utilisateur." }

      .row-fluid
        .span6
          .row-fluid
            .span12.box
              %h3.aligncenter Information
              %table.table.table-bordered.table-striped.margin0bottom
                %thead
                  %tbody
                    %tr
                      %th= t('mongoid.models.user.attributes.email')
                      %td= render partial: 'account/shared/cell', locals: { instance: @customer, key: 'email' }
                    %tr
                      %th= t('mongoid.models.user.attributes.first_name')
                      %td= render partial: 'account/shared/cell', locals: { instance: @customer, key: 'first_name' }
                    %tr
                      %th= t('mongoid.models.user.attributes.last_name')
                      %td= render partial: 'account/shared/cell', locals: { instance: @customer, key: 'last_name' }
                    %tr
                      %th= t('mongoid.models.user.attributes.code')
                      %td= render partial: 'account/shared/cell', locals: { instance: @customer, key: 'code' }
                    %tr
                      %th= t('mongoid.models.user.attributes.company')
                      %td= render partial: 'account/shared/cell', locals: { instance: @customer, key: 'company' }
                    %tr
                      %th= t('mongoid.models.user.attributes.is_centralized')
                      %td= render partial: 'account/shared/cell', locals: { instance: @customer, key: 'is_centralized' }
              - if @customer.is_editable
                .row-fluid.margin1top
                  .span12
                    - if can_edit?
                      = link_to t('actions.edit'), edit_account_organization_customer_path(@customer), class: 'btn pull-right'

          .row-fluid
            .span12.box
              %h3.aligncenter Abonnement
              %hr
              %h4.aligncenter.margin1bottom
                Options des périodes
              %table.table.table-striped.table-condensed.table-bordered
                %tbody
                  %tr
                    %th= t('mongoid.models.user.attributes.authd_prev_period')
                    %td= @customer.authd_prev_period
                  %tr
                    %th= t('mongoid.models.user.attributes.auth_prev_period_until_day')
                    %td= @customer.auth_prev_period_until_day
              .row-fluid.margin1top
                .span12
                  = link_to t('actions.edit'), edit_period_options_account_organization_customer_path(@customer), class: 'btn pull-right'
              %hr
              %h4.aligncenter.margin1bottom
                Configuration actuelle
                = @subscription.period_duration == 1 ? '(Périodicité mensuelle)' : '(Périodicité trimestrielle)'
              = render partial: 'options'

              - if @subscription.request_action.present?
                %h4.aligncenter.margin1top
                  Configuration souhaitée
                  = @subscription.period_duration == 1 ? '(Périodicité mensuelle)' : '(Périodicité trimestrielle)'
                = render partial: 'requested_options'
              - if @customer.is_editable
                .row-fluid.margin1top
                  .span12
                    - if can_edit?
                      = link_to t('actions.edit'), edit_account_organization_subscription_path(@customer), class: 'btn pull-right'

        .span6
          .row-fluid
            .span12.box
              %h3.aligncenter Gestion des adresses
              .row-fluid.margin1bottom
                .span6
                  = render partial: 'account/addresses/address', locals: { address: @customer.billing_address,  single: true, is_for_billing: true }
                .span6
                  = render partial: 'account/addresses/address', locals: { address: @customer.shipping_address, single: true, is_for_billing: false }
              .row-fluid
                .span12.aligncenter
                  = link_to 'Configurer', account_organization_customer_addresses_path(@customer), class: 'btn'
          .row-fluid
            .span12.box
              %h3.aligncenter Journaux comptable
              %table.table.table-striped.table-bordered.table-condensed.margin1top.margin0bottom
                %thead
                  %tr
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Libellé court
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Libellé long
                    %th{ colspan: 3 } Traitement Pré-Saisie ou NDF
                  %tr
                    %th Type
                    %th N°
                    %th Compte charge
                %tbody
                  - @journals.each do |journal|
                    %tr{ id: journal.slug }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'name' }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'description' }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'entry_type', is_translatable: true }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'account_number' }
                      %td= render partial: 'account/shared/cell', locals: { instance: journal, key: 'charge_account' }
              - if @customer.is_fiduceo_authorized && @customer.fiduceo_retrievers.banks.count > 0
                .aligncenter.margin1top
                  = link_to 'Comptes bancaires', account_organization_customer_bank_accounts_path(@customer), class: 'btn'
          .row-fluid
            .span12.box
              %h3.aligncenter.margin1bottom Divers
              .row-fluid
                .span12.aligncenter
                  - if @organization.ibiza.try(:is_configured?)
                    = simple_form_for @customer, url: update_ibiza_account_organization_customer_path(@customer), html: { class: 'form margin0bottom' } do |f|
                      - users = @organization.ibiza.users
                      - if users.is_a?(Array)
                        - hint = link_to('Rafraîchir la liste', refresh_users_cache_account_organization_ibiza_path(back: account_organization_customer_path(@customer)))
                      - elsif users.nil?
                        - users = []
                        - hint = 'Mise à jour en cours, veuillez rafraîchir la page dans quelques secondes'
                      - else
                        - users = []
                        - hint = 'Erreur'
                      = f.input :ibiza_id,   label: t('mongoid.models.user.attributes.ibiza_id'), collection: users, input_html: { class: 'margin0bottom' }, hint: hint
                      = f.submit t('actions.submit'), class: 'btn'
                  - if @organization.ibiza.try(:token).blank?
                    = link_to 'Plan comptable', account_organization_customer_accounting_plan_path(@customer), class: 'btn'
                    = link_to 'Paramètrage des TVA', account_organization_customer_accounting_plan_vat_accounts_path(@customer), class: 'btn'
