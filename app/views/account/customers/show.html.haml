#customer
  .row-fluid
    .span12
      = render 'header'

      .row-fluid
        .span12.box
          %ul.nav.nav-tabs
            %li{ class: ('active' if params[:tab] == 'information' || params[:tab].blank? ) }
              %a{ href: '#information', data: { toggle: 'tab' } } Information
            %li{ class: ('active' if params[:tab] == 'addresses') }
              %a{ href: '#addresses', data: { toggle: 'tab' } } Adresses
            - if @customer.active?
              %li{ class: ('active' if params[:tab] == 'subscription') }
                %a{ href: '#subscription', data: { toggle: 'tab' } } Forfaits
              - if @customer.options.is_upload_authorized
                %li{ class: ('active' if params[:tab] == 'period_options') }
                  %a{ href: '#period_options', data: { toggle: 'tab' } } Option téléversement
            - if @organization.ibiza.try(:is_configured?)
              %li{ class: ('active' if params[:tab] == 'ibiza') }
                %a{ href: '#ibiza', data: { toggle: 'tab' } } iBiza
            %li{ class: ('active' if params[:tab] == 'journals') }
              %a{ href: '#journals', data: { toggle: 'tab' } } Journaux comptables
            - if @customer.active? && @customer.is_fiduceo_authorized
              %li= link_to "iDo'FacBanque", account_organization_customer_fiduceo_retrievers_path(@organization, @customer)
              - if @customer.fiduceo_retrievers.banks.count > 0
                %li{ class: ('active' if params[:tab] == 'bank_accounts') }
                  %a{ href: '#bank_accounts', data: { toggle: 'tab' } } Paramètres bancaires
            %li{ class: ('active' if params[:tab] == 'compta') }
              %a{ href: '#compta', data: { toggle: 'tab' } } Outil Comptable
            - if @organization.ibiza.try(:access_token).blank?
              %li{ class: ('active' if params[:tab] == 'others') }
                %a{ href: '#others', data: { toggle: 'tab' } } Divers
            - if @organization.is_csv_descriptor_used
              %li{ class: ('active' if params[:tab] == 'csv_descriptor') }
                %a{ href: '#csv_descriptor', data: { toggle: 'tab' } } Format d’export .csv
            - if @organization.knowings.try(:ready?)
              %li{ class: ('active' if params[:tab] == 'ged') }
                %a{ href: '#ged', data: { toggle: 'tab' } } Outil GED
            - if @user.is_admin && @customer.active?
              %li{ class: ('active' if params[:tab] == 'file_storages') }
                %a{ href: '#file_storages', data: { toggle: 'tab' } } Stockages externes

          .tab-content
            #information.tab-pane{ class: ('active' if params[:tab] == 'information' || params[:tab].blank?) }
              %table.table.table-striped.table-condensed
                %thead
                  %tbody
                    %tr
                      %th= t('mongoid.models.common.attributes.created_at')
                      %td= l(@customer.created_at)
                    %tr
                      %th= t('mongoid.models.user.attributes.code')
                      %td= @customer.code
                    %tr
                      %th= t('mongoid.models.user.attributes.company')
                      %td= @customer.company
                    %tr
                      %th= t('mongoid.models.user.attributes.first_name')
                      %td= @customer.first_name
                    %tr
                      %th= t('mongoid.models.user.attributes.last_name')
                      %td= @customer.last_name
                    %tr
                      %th= t('mongoid.models.user.attributes.email')
                      %td= @customer.email
                    %tr
                      %th= t('mongoid.models.user.attributes.phone_number')
                      %td= @customer.phone_number
                    %tr
                      %th Collaborateur en charge
                      %td
                        - if @customer.parent
                          = @customer.parent.info
                        - else
                          %i Aucun
              - if @customer.active?
                .row-fluid
                  .span12
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            #addresses.tab-pane{ class: ('active' if params[:tab] == 'addresses') }
              .row-fluid.margin1bottom
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.paper_return_address,  single: true, type: 'paper_return' }
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.paper_set_shipping_address, single: true, type: 'paper_set_shipping' }
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.dematbox_shipping_address, single: true, type: 'dematbox_shipping' }
              - if @customer.active?
                .row-fluid
                  .span12.aligncenter
                    = link_to icon_edit + ' ' + 'Configurer', account_organization_customer_addresses_path(@organization, @customer), class: 'btn btn-primary'
            - if @customer.active?
              #subscription.tab-pane{ class: ('active' if params[:tab] == 'subscription') }
                .row-fuild
                  .span6.margin2bottom
                    %h4
                      Périodicité
                      - if @subscription.period_duration == 1
                        mensuelle
                      - elsif @subscription.period_duration == 3
                        trimestrielle
                      - elsif @subscription.period_duration == 12
                        annuel
                  .span6.alignright
                    - link_name = ''
                    - if @subscription.is_mail_package_active && @subscription.is_scan_box_package_active
                      - link_name = "Commande de scanner iDocus'box et de Kit envoi courrier"
                    - elsif @subscription.is_scan_box_package_active
                      - link_name = "Commande de scanner iDocus'box"
                    - elsif @subscription.is_mail_package_active || @subscription.is_annual_package_active
                      - link_name = 'Commande de Kit envoi courrier'
                    - if link_name.present?
                      = link_to link_name, account_organization_customer_orders_path(@organization, @customer), class: 'btn'
                = render partial: 'options'
                .row-fluid.margin1top
                  .span12
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_account_organization_customer_subscription_path(@organization, @customer), class: 'btn btn-primary pull-right'
              - if @customer.options.is_upload_authorized
                #period_options.tab-pane{ class: ('active' if params[:tab] == 'period_options') }
                  %table.table.table-striped.table-condensed
                    %tbody
                      %tr
                        %th= t('mongoid.models.user.attributes.authd_prev_period')
                        %td= @customer.authd_prev_period
                      %tr
                        %th= t('mongoid.models.user.attributes.auth_prev_period_until_day')
                        %td= @customer.auth_prev_period_until_day
                      - if @user.is_admin
                        %tr
                          %th= t('mongoid.models.user.attributes.auth_prev_period_until_month')
                          %td= @customer.auth_prev_period_until_month
                  .row-fluid
                    .span12
                      = link_to icon_edit + ' ' + t('actions.edit'), edit_period_options_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            - if @organization.ibiza.try(:is_configured?)
              #ibiza.tab-pane{ class: ('active' if params[:tab] == 'ibiza') }
                %table.table.table-striped.table-condensed
                  %tbody
                    %tr
                      %th= t('mongoid.models.user.attributes.ibiza_id')
                      - users = @organization.ibiza.users
                      - if @customer.ibiza_id.nil?
                        %td
                          %i Aucun
                      - elsif users.is_a?(Array)
                        %td= users.select { |e| e.id == @customer.ibiza_id }.first.try(:name)
                      - elsif users.nil?
                        %td
                          %span.label Rafraîchissement en cours
                      - else
                        %td
                          %span.label.label-important Erreur
                    %tr
                      %th= t('mongoid.models.user_options.attributes.is_auto_deliver')
                      %td= @customer.options.auto_deliver? ? t('yes_value') : t('no_value')
                .row-fluid
                  .span12
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_ibiza_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            #journals.tab-pane{ class: ('active' if params[:tab] == 'journals') }
              - if @pending_journals.present?
                .alert
                  %strong Attention!
                  Les journaux suivants sont assignés aux automates de récupération mais ne sont pas configurés :
                  != @pending_journals.map { |j| content_tag(:strong, j) }.join(', ')
              - unless @user.is_admin || Settings.is_journals_modification_authorized || !@user.rights.is_customer_journals_management_authorized
                %p
                  En cas de nécessité (suppression du journal), merci de contacter le
                  = link_to 'support.', 'javascript:ZDiscussions.showDiscussionsFBW();'
              %table.table.table-striped.table-bordered.table-condensed
                %thead
                  %tr
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Code journal iDocus
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Nom journal comptable
                    %th.aligncenter{ colspan: 4 } Pré-saisie comptable
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Nombre d’automates
                    - if (is_leader? || @user.rights.is_customer_journals_management_authorized) && @customer.active?
                      %th{ rowspan: 2, style: 'vertical-align:middle' } Actions
                  %tr
                    %th Type de pré-saisie
                    %th Type de compte
                    %th Compte tiers
                    %th Compte de charge/produit
                %tbody
                  - @journals.each do |journal|
                    %tr
                      %td= journal.name
                      %td= journal.description
                      %td= t("mongoid.models.account_book_type.attributes.entry_type_#{journal.entry_type}")
                      %td
                        - if journal.is_pre_assignment_processable?
                          = journal.default_account? ? 'compte par défaut' : "compte d'attente"
                      %td= journal.account_number.presence || journal.default_account_number
                      %td= journal.charge_account.presence || journal.default_charge_account
                      %td= journal.fiduceo_retrievers.count
                      - if (is_leader? || @user.rights.is_customer_journals_management_authorized) && @customer.active?
                        %td
                          = link_to icon_edit + 'Editer', edit_account_organization_customer_journal_path(@organization, @customer, journal), class: 'btn btn-mini'
                          - if @user.is_admin || Settings.is_journals_modification_authorized || journal.is_open_for_modification?
                            = link_to icon_destroy + 'Supprimer', account_organization_customer_journal_path(@organization, @customer, journal), method: 'delete', data: { confirm: t('actions.confirm') }, class: 'btn btn-mini'
                            - unless @user.is_admin || Settings.is_journals_modification_authorized
                              %i (pour #{distance_of_time_in_words_to_now(journal.created_at + 24.hours)})
              .row-fluid
                .span6
                  Pré-affectation comptable :
                  %span.label= @customer.options.is_preassignment_authorized ? t('yes_value') : t('no_value')
                  %span.margin2left
                  Total :
                  %span.label= @customer.account_book_types.count
                  %span.margin2left
                  Total autorisé :
                  %span.label= @customer.options.max_number_of_journals
                .span6.alignright
                  - if @customer.active? && (is_leader? || @user.rights.is_customer_journals_management_authorized)
                    - if is_max_number_of_journals_reached?
                      = link_to icon(icon: 'plus') + ' ' + 'Ajouter nouveau', '#', class: 'btn btn-primary', disabled: 'disabled'
                      = link_to icon(icon: 'th-large') + ' Copier depuis base existante',            '#', class: 'btn btn-primary', disabled: 'disabled'
                    - elsif @customer.active?
                      = link_to icon(icon: 'plus') + ' ' + 'Ajouter nouveau', new_account_organization_customer_journal_path(@organization, @customer), class: 'btn btn-primary'
                      = link_to icon(icon: 'th-large') + ' Copier depuis base existante', select_account_organization_customer_journals_path(@organization, @customer), class: 'btn btn-primary'
            - if @customer.fiduceo_retrievers.banks.count > 0
              #bank_accounts.tab-pane{ class: ('active' if params[:tab] == 'bank_accounts') }
                %table.table.table-striped.table-condensed.margin0bottom
                  %tr
                    %th= t('mongoid.models.bank_account.attributes.bank_name')
                    %th= t('mongoid.models.bank_account.attributes.name')
                    %th= t('mongoid.models.bank_account.attributes.number')
                    %th= t('mongoid.models.bank_account.attributes.journal')
                    %th= t('mongoid.models.bank_account.attributes.accounting_number')
                    %th= t('mongoid.models.bank_account.attributes.start_date')
                    %th Paramétrer
                  - @customer.bank_accounts.each do |bank_account|
                    %tr
                      %td= bank_account.bank_name
                      %td= bank_account.name
                      %td= bank_account.number
                      %td= bank_account.journal
                      %td= bank_account.accounting_number
                      %td= bank_account.start_date
                      %td= icon_link_to edit_account_organization_customer_bank_account_path(@organization, @customer, bank_account), { icon: 'edit' }, { class: 'btn btn-mini' }
            #compta.tab-pane{ class: ('active' if params[:tab] == 'compta') }
              %table.table.table-striped.table-condensed
                %thead
                  %tbody
                    %tr
                      %th= t('mongoid.models.user_options.attributes.is_taxable')
                      %td= @customer.options.is_taxable ? t('yes_value') : t('no_value')
                    %tr
                      %th= t('mongoid.models.user_options.attributes.is_pre_assignment_date_computed')
                      %td= @customer.options.pre_assignment_date_computed? ? 'Oui, date de la période iDocus' : 'Non, date d’origine'
              .row-fluid
                .span12
                  = link_to icon_edit + ' ' + t('actions.edit'), edit_compta_options_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            - if @organization.ibiza.try(:access_token).blank?
              #others.tab-pane{ class: ('active' if params[:tab] == 'others') }
                .row-fluid
                  .span12.aligncenter
                    - if @customer.active?
                      = link_to 'Plan comptable', account_organization_customer_accounting_plan_path(@organization, @customer), class: 'btn'
                      = link_to 'Paramètrage des TVA', account_organization_customer_accounting_plan_vat_accounts_path(@organization, @customer), class: 'btn'
                    = link_to 'Exercices comptables', account_organization_customer_exercises_path(@organization, @customer), class: 'btn'
            - if @organization.is_csv_descriptor_used
              #csv_descriptor.tab-pane{ class: ('active' if params[:tab] == 'csv_descriptor'), :style => "line-height:25px" }
                .aligncenter
                  - if @customer.options.is_own_csv_descriptor_used
                    Ce dossier utilise son propre format de fichier d'export .csv.
                    %br
                    = link_to 'Cliquez ici ', deactivate_account_organization_customer_csv_descriptor_path(@organization, @customer), method: :patch
                    pour adopter le format de l'organisation.
                    %br
                    Vous pouvez également éditer le format actuel en cliquant sur le bouton ci-dessous.
                    %br
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_account_organization_customer_csv_descriptor_path(@organization, @customer), class: 'btn btn-primary'
                  - else
                    Ce dossier utilise le format de fichier d'export .csv de l'organisation.
                    %br
                    = link_to 'Cliquez ici', activate_account_organization_customer_csv_descriptor_path(@organization, @customer), method: :patch
                    pour créer un format propre au dossier.
            - if @organization.knowings.try(:ready?)
              #ged.tab-pane{ class: ('active' if params[:tab] == 'ged') }
                %table.table.table-striped.table-condensed
                  %thead
                    %tbody
                      %tr
                        %th= t('mongoid.models.user.attributes.knowings_code')
                        %td= @customer.knowings_code
                      %tr
                        %th= t('mongoid.models.user.attributes.knowings_visibility')
                        %td= knowings_visibility @customer.knowings_visibility
                .row-fluid
                  .span12
                    = link_to icon_edit + ' ' + t('actions.edit'), edit_knowings_options_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            - if @user.is_admin && @customer.active?
              #file_storages.tab-pane{ class: ('active' if params[:tab] == 'file_storages') }
                = render partial: 'account/customers/file_storages', locals: { user: @customer }
                .alignright
                  = link_to icon_edit + ' ' + t('actions.edit'), edit_account_organization_customer_file_storage_authorizations_path(@organization, @customer), class: 'btn btn-primary'
