#customer
  .row-fluid
    .span12
      = render 'header'

      .row-fluid
        .span12.box
          %ul.nav.nav-tabs
            %li{ class: ('active' if params[:tab] == 'information' || params[:tab].blank? ) }
              %a{ href: '#information', data: { toggle: 'tab' } } Informations
            - if @customer.active?
              %li{ class: ('active' if params[:tab] == 'subscription') }
                %a{ href: '#subscription', data: { toggle: 'tab' } } Forfaits
              %li{ class: ('active' if params[:tab] == 'orders') }
                %a{ href: '#orders', data: { toggle: 'tab' } } Commandes Kits/Scan
            %li{ class: ('active' if params[:tab] == 'addresses') }
              %a{ href: '#addresses', data: { toggle: 'tab' } } Adresses
            - if @customer.active? && @customer.options.is_upload_authorized
              %li{ class: ('active' if params[:tab] == 'period_options') }
                %a{ href: '#period_options', data: { toggle: 'tab' } } Option téléversement
            %li{ class: ('active' if params[:tab] == 'journals') }
              %a{ href: '#journals', data: { toggle: 'tab' } } Journaux comptables
            - if @customer.active? && @customer.options.is_retriever_authorized
              %li= link_to "iDo'FacBanque", account_organization_customer_retrievers_path(@organization, @customer)
              %li{ class: ('active' if params[:tab] == 'bank_accounts') }
                %a{ href: '#bank_accounts', data: { toggle: 'tab' } } Paramètres bancaires
            %li{ class: ('active' if params[:tab] == 'compta') }
              %a{ href: '#compta', data: { toggle: 'tab' } } Comptabilité
            - if @organization.ibiza.try(:used?)
              %li{ class: ('active' if params[:tab] == 'ibiza_box') }
                %a{ href: '#ibiza_box', data: { toggle: 'tab' } } Ibiza Box
            - unless @organization.ibiza.try(:used?)
              %li{ class: ('active' if params[:tab] == 'others') }
                %a{ href: '#others', data: { toggle: 'tab' } } Plan comptable
            - if @organization.is_csv_descriptor_used
              %li{ class: ('active' if params[:tab] == 'csv_descriptor') }
                %a{ href: '#csv_descriptor', data: { toggle: 'tab' } } Format d’export .csv
            - if @organization.knowings.try(:ready?)
              %li{ class: ('active' if params[:tab] == 'ged') }
                %a{ href: '#ged', data: { toggle: 'tab' } } Outil GED
            - if @customer.is_dematbox_authorized
              %li{ class: ('active' if params[:tab] == 'idocus_box') }
                %a{ href: '#idocus_box', data: { toggle: 'tab' } } iDocus'Box
            - if @user.is_admin && @customer.active?
              %li{ class: ('active' if params[:tab] == 'file_storages') }
                %a{ href: '#file_storages', data: { toggle: 'tab' } } Stockages externes

          .tab-content
            #information.tab-pane{ class: ('active' if params[:tab] == 'information' || params[:tab].blank?) }
              %table.table.table-striped.table-condensed
                %thead
                  %tbody
                    %tr
                      %th= t('activerecord.models.user.attributes.code')
                      %td= @customer.code
                    %tr
                      %th= t('activerecord.models.user.attributes.company')
                      %td= @customer.company
                    %tr
                      %th= t('activerecord.models.user.attributes.last_name')
                      %td= @customer.last_name
                    %tr
                      %th= t('activerecord.models.user.attributes.first_name')
                      %td= @customer.first_name
                    %tr
                      %th= t('activerecord.models.user.attributes.email')
                      %td= @customer.email
                    %tr
                      %th= t('activerecord.models.user.attributes.phone_number')
                      %td= @customer.phone_number
                    %tr
                      %th Groupe de rattachement
                      %td= @customer.groups.order(name: :asc).map(&:name).join(', ')
                    %tr
                      %th Collaborateur en charge
                      %td
                        - if @customer.manager
                          = @customer.manager.info
                        - else
                          %i{ style: 'color:gray' } Aucun
                    %tr
                      %th= t('activerecord.models.common.attributes.created_at')
                      %td= l(@customer.created_at)
                    %tr
                      %th Partagé avec :
                      %td
                        - if @customer.collaborators.size > 0
                          - @customer.collaborators.each do |collaborator|
                            = collaborator.info
                            %br
                        - else
                          %i{ style: 'color:gray' } Aucun
              - if @customer.active?
                .row-fluid
                  .span12
                    = link_to icon_edit + ' ' + 'Modifier', edit_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            #addresses.tab-pane{ class: ('active' if params[:tab] == 'addresses') }
              .row-fluid.margin1bottom
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.paper_return_address,  single: true, type: 'paper_return' }
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.paper_set_shipping_address, single: true, type: 'paper_set_shipping' }
                .span4
                  = render partial: 'account/customer_addresses/address', locals: { address: @customer.dematbox_shipping_address, single: true, type: 'dematbox_shipping' }
              - if @customer.active?
                .row-fluid
                  .span12.aligncenter
                    = link_to icon_edit + ' ' + 'Modifier', account_organization_customer_addresses_path(@organization, @customer), class: 'btn btn-primary'
            - if @customer.active?
              #subscription.tab-pane{ class: ('active' if params[:tab] == 'subscription') }
                %h4.margin2bottom
                  Périodicité
                  - if @subscription.period_duration == 1
                    mensuelle
                  - elsif @subscription.period_duration == 3
                    trimestrielle
                  - elsif @subscription.period_duration == 12
                    annuel
                = render partial: 'options'
                .row-fluid.margin1top
                  .span12
                    = link_to icon_edit + ' ' + 'Modifier', edit_account_organization_customer_subscription_path(@organization, @customer), class: 'btn btn-primary pull-right'
              #orders.tab-pane{ class: ('active' if params[:tab] == 'orders') }
                %table.table.table-condensed.table-striped.table-bordered.margin2bottom
                  %thead
                    %tr
                      %th Date de la commande
                      %th Produit
                      %th Quantité
                      %th Prix (HT)
                      %th Adresse de livraison
                      %th Statut
                      %th Actions
                  %tbody
                    - @customer.orders.order(created_at: :desc).each do |order|
                      %tr
                        %td= l order.created_at
                        - if order.dematbox?
                          %td iDocus'Box
                          %td= order.dematbox_count
                          %td.alignright= format_price_00(order.price_in_cents_wo_vat) + ' €'
                        - else
                          %td Kit envoi courrier
                          %td
                            = order.paper_set_casing_size.to_s + 'g'
                            %br
                            = order.paper_set_folder_count.to_s + ' chemises'
                            %br
                            = paper_set_date_to_name(order.period_duration, order.paper_set_start_date)
                            à
                            = paper_set_date_to_name(order.period_duration, order.paper_set_end_date)
                          %td.alignright= format_price_00(order.price_in_cents_wo_vat) + ' €'
                        %td= order.address.try(:long_info)
                        %td= Order.state_machine.states[order.state].human_name
                        %td
                          - if order.pending? && (Time.now < order.created_at + 24.hours)
                            = link_to icon_edit + 'Modifier', edit_account_organization_customer_order_path(@organization, @customer, order), class: 'btn btn-mini'
                            = link_to icon_destroy + 'Annuler', account_organization_customer_order_path(@organization, @customer, order), method: 'delete', data: { confirm: t('actions.confirm') }, class: 'btn btn-mini'
                .pull-right
                  - if @customer.subscription.is_scan_box_package_active
                    = link_to "Commander un/des scanner(s) iDocus'box", new_account_organization_customer_order_path(@organization, @customer, order: { type: 'dematbox' }), class: 'btn btn-primary'
                  - if @customer.subscription.is_mail_package_active || @customer.subscription.is_annual_package_active
                    = link_to 'Commander un Kit envoi courrier', new_account_organization_customer_order_path(@organization, @customer, order: { type: 'paper_set' }), class: 'btn btn-primary'
              - if @customer.options.is_upload_authorized
                #period_options.tab-pane{ class: ('active' if params[:tab] == 'period_options') }
                  %table.table.table-striped.table-condensed
                    %tbody
                      %tr
                        %th= t('activerecord.models.user.attributes.authd_prev_period')
                        %td= @customer.authd_prev_period
                      %tr
                        %th= t('activerecord.models.user.attributes.auth_prev_period_until_day')
                        %td= @customer.auth_prev_period_until_day
                      - if @user.is_admin
                        %tr
                          %th= t('activerecord.models.user.attributes.auth_prev_period_until_month')
                          %td= @customer.auth_prev_period_until_month
                  .row-fluid
                    .span12
                      = link_to icon_edit + ' ' + 'Modifier', edit_period_options_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            #journals.tab-pane{ class: ('active' if params[:tab] == 'journals') }
              - if @pending_journals.present?
                .alert
                  %strong Attention!
                  Les journaux suivants sont assignés aux automates de récupération mais ne sont pas configurés :
                  != @pending_journals.map { |j| content_tag(:strong, j) }.join(', ')
              - unless @user.is_admin || false || !@user.organization_rights_is_customer_journals_management_authorized
                %p
                  En cas de nécessité (suppression du journal), merci de contacter le
                  = link_to 'support.', 'javascript:ZDiscussions.showDiscussionsFBW();'
              %table.table.table-striped.table-bordered.table-condensed
                %thead
                  %tr
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Code journal iDocus
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Nom journal comptable
                    %th.aligncenter{ colspan: 4 } Pré-saisie comptable
                    %th{ rowspan: 2, style: 'vertical-align:middle' } Nombre d’automates
                    - if (@user.leader? || @user.organization_rights_is_customer_journals_management_authorized) && @customer.active?
                      %th{ rowspan: 2, style: 'vertical-align:middle' } Actions
                  %tr
                    %th Type de pré-saisie
                    %th Type de compte
                    %th Compte tiers
                    %th Compte de charge/produit
                %tbody
                  - @journals.each do |journal|
                    %tr
                      %td= journal.name
                      %td= journal.description
                      %td= t("activerecord.models.account_book_type.attributes.entry_type_#{journal.entry_type}")
                      %td
                        - if journal.is_pre_assignment_processable?
                          = journal.default_account? ? 'compte par défaut' : "compte d'attente"
                      %td= journal.meta_account_number
                      %td= journal.meta_charge_account
                      %td= journal.retrievers.count
                      - if (@user.leader? || @user.organization_rights_is_customer_journals_management_authorized) && @customer.active?
                        %td
                          = link_to icon_edit + 'Editer', edit_account_organization_customer_journal_path(@organization, @customer, journal), class: 'btn btn-mini'
                          - if @user.is_admin || false || journal.is_open_for_modification?
                            = link_to icon_destroy + 'Supprimer', account_organization_customer_journal_path(@organization, @customer, journal), method: 'delete', data: { confirm: t('actions.confirm') }, class: 'btn btn-mini'
                            - unless @user.is_admin || false
                              %i (pour #{distance_of_time_in_words_to_now(journal.created_at + 24.hours)})
              .row-fluid
                .span7
                  %b Pré-saisie comptable activée pour le dossier :
                  %span.label{ class: 'label-' + (@customer.options.is_preassignment_authorized ? 'success' : 'important') }
                    = @customer.options.is_preassignment_authorized ? t('yes_value') : t('no_value')
                  - unless @customer.options.is_preassignment_authorized
                    %i.margin1left
                      = link_to '(Activer la pré-saisie comptable)', edit_account_organization_customer_subscription_path(@organization, @customer)
                  %br
                  %b Nombre de journaux comptables utilisés :
                  %span.label= @customer.account_book_types.count
                  %br
                  %b Nombre de journaux comptables autorisés :
                  %span.label= @customer.options.max_number_of_journals
                  - if @customer.options.max_number_of_journals < 10
                    %i.margin1left
                      = link_to '(Augmenter le total autorisé de journaux comptables)', edit_account_organization_customer_subscription_path(@organization, @customer)
                .span5.alignright
                  - if @customer.active? && (@user.leader? || @user.organization_rights_is_customer_journals_management_authorized)
                    - if is_max_number_of_journals_reached?
                      = link_to icon(icon: 'plus') + ' ' + 'Ajouter nouveau', '#', class: 'btn btn-primary', disabled: 'disabled'
                      = link_to icon(icon: 'th-large') + ' Copier depuis base existante',            '#', class: 'btn btn-primary', disabled: 'disabled'
                    - elsif @customer.active?
                      = link_to icon(icon: 'plus') + ' ' + 'Ajouter nouveau', new_account_organization_customer_journal_path(@organization, @customer), class: 'btn btn-primary'
                      = link_to icon(icon: 'th-large') + ' Copier depuis base existante', select_account_organization_customer_journals_path(@organization, @customer), class: 'btn btn-primary'
            #bank_accounts.tab-pane{ class: ('active' if params[:tab] == 'bank_accounts') }
              %table.table.table-striped.table-condensed.margin0bottom
                %tr
                  %th= t('activerecord.models.bank_account.attributes.bank_name')
                  %th= t('activerecord.models.bank_account.attributes.name')
                  %th= t('activerecord.models.bank_account.attributes.number')
                  %th= t('activerecord.models.bank_account.attributes.journal')
                  %th= t('activerecord.models.bank_account.attributes.accounting_number')
                  %th= t('activerecord.models.bank_account.attributes.start_date')
                  %th Paramétrer
                - @customer.bank_accounts.used.each do |bank_account|
                  %tr
                    %td= bank_account.bank_name
                    %td= bank_account.name
                    %td= bank_account.number
                    %td= bank_account.journal
                    %td= bank_account.accounting_number
                    %td= bank_account.start_date
                    %td= icon_link_to edit_account_organization_customer_bank_account_path(@organization, @customer, bank_account), { icon: 'edit' }, { class: 'btn btn-mini' }
            #compta.tab-pane{ class: ('active' if params[:tab] == 'compta') }
              %table.table.table-striped.table-condensed
                %thead
                  %tbody
                    %tr
                      %th= t('activerecord.models.user_options.attributes.is_taxable')
                      %td= @customer.options.is_taxable ? t('yes_value') : t('no_value')
                    %tr
                      %th= t('activerecord.models.user_options.attributes.is_pre_assignment_date_computed')
                      %td= @customer.options.pre_assignment_date_computed? ? 'Date de la période iDocus' : 'Date d’origine'
                    %tr
                      %th= t('activerecord.models.user_options.attributes.is_operation_processing_forced')
                      %td= @customer.options.operation_processing_forced? ? t('yes_value') : t('no_value')
                    %tr
                      %th= t('activerecord.models.user_options.attributes.is_operation_value_date_needed')
                      %td= @customer.options.operation_value_date_needed? ? t('yes_value') : t('no_value')
              .row-fluid
                .span12
                  = link_to icon_edit + ' ' + 'Modifier', edit_compta_options_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
              - if @organization.ibiza.try(:used?)
                %h4.margin2top.margin1bottom iBiza
                - unless @organization.ibiza.configured?
                  %p
                    = render 'shared/ibiza_not_configured_warning'
                %table.table.table-striped.table-condensed
                  %tbody
                    %tr
                      %th= t('activerecord.models.user.attributes.ibiza_id')
                      - if @organization.ibiza.configured?
                        - users = @organization.ibiza.users
                        - if @customer.ibiza_id.nil?
                          %td
                            %i{ style: 'color:gray' } Aucun
                        - elsif users.is_a?(Array)
                          %td= users.select { |e| e.id == @customer.ibiza_id }.first.try(:name)
                        - elsif users.nil?
                          %td
                            %span.label Rafraîchissement en cours
                        - else
                          %td
                            %span.label.label-important Erreur
                      - else
                        %td
                    %tr
                      %th= t('activerecord.models.user_options.attributes.is_auto_deliver')
                      %td= @customer.options.auto_deliver? ? t('yes_value') : t('no_value')
                    %tr
                      %th= t('activerecord.models.user_options.attributes.is_compta_analysis_activated')
                      %td= @customer.options.compta_analysis_activated? ? t('yes_value') : t('no_value')
                .row-fluid
                  .span12
                    - if @organization.ibiza.configured?
                      = link_to icon_edit + ' ' + 'Modifier', edit_ibiza_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
                    - else
                      = link_to icon_edit + ' ' + 'Modifier', '#', class: 'btn btn-primary pull-right', disabled: true
            - unless @organization.ibiza.try(:used?)
              #others.tab-pane{ class: ('active' if params[:tab] == 'others') }
                .row-fluid
                  .span12.aligncenter
                    - if @customer.active?
                      = link_to 'Plan comptable', account_organization_customer_accounting_plan_path(@organization, @customer), class: 'btn'
                      = link_to 'Paramètrage des TVA', account_organization_customer_accounting_plan_vat_accounts_path(@organization, @customer), class: 'btn'
                    = link_to 'Exercices comptables', account_organization_customer_exercises_path(@organization, @customer), class: 'btn'
            - if @organization.ibiza.try(:used?)
              #ibiza_box.tab-pane{ class: ('active' if params[:tab] == 'ibiza_box') }
                - if @organization.ibiza.first_configured?
                  = render 'ibiza_box'
                - else
                  = render 'shared/ibiza_not_configured_warning'
            - if @organization.is_csv_descriptor_used
              #csv_descriptor.tab-pane{ class: ('active' if params[:tab] == 'csv_descriptor'), :style => "line-height:25px" }
                .aligncenter
                  - if @customer.options.is_own_csv_descriptor_used
                    Ce dossier utilise son propre format de fichier d'export .csv.
                    %br
                    = link_to 'Cliquez ici ', deactivate_account_organization_customer_csv_descriptor_path(@organization, @customer), method: :patch
                    pour adopter le format de l'organisation.
                    %br
                    Vous pouvez également éditer le format actuel en cliquant sur le bouton ci-dessous.
                    %br
                    = link_to icon_edit + ' ' + 'Modifier', edit_account_organization_customer_csv_descriptor_path(@organization, @customer), class: 'btn btn-primary'
                  - else
                    Ce dossier utilise le format de fichier d'export .csv de l'organisation.
                    %br
                    = link_to 'Cliquez ici', activate_account_organization_customer_csv_descriptor_path(@organization, @customer), method: :patch
                    pour créer un format propre au dossier.
            - if @organization.knowings.try(:ready?)
              #ged.tab-pane{ class: ('active' if params[:tab] == 'ged') }
                %table.table.table-striped.table-condensed
                  %thead
                    %tbody
                      %tr
                        %th= t('activerecord.models.user.attributes.knowings_code')
                        %td= @customer.knowings_code
                      %tr
                        %th= t('activerecord.models.user.attributes.knowings_visibility')
                        %td= knowings_visibility @customer.knowings_visibility
                .row-fluid
                  .span12
                    = link_to icon_edit + ' ' + 'Modifier', edit_knowings_options_account_organization_customer_path(@organization, @customer), class: 'btn btn-primary pull-right'
            - if @customer.is_dematbox_authorized
              #idocus_box.tab-pane{ class: ('active' if params[:tab] == 'idocus_box') }
                - if @customer.dematbox.try(:is_configured)
                  %h4.margin1bottom Liste des services
                  - if @customer.dematbox.try(:services).try(:any?)
                    %table.table.table-striped.table-bordered.table-condensed.margin0bottom
                      %thead
                        %tr
                          %th Groupe
                          %th Nom
                      %tbody
                        - @customer.dematbox.services.order(group_name: :asc, name: :asc).each do |service|
                          %tr
                            %td= service.group_name
                            %td= service.name
                  - elsif @customer.account_book_types.size == 0
                    %p Pas de journaux paramétrés.
                  .alignright
                    = link_to icon_destroy + ' Déconnecter le Scanner', account_organization_customer_dematbox_path(@organization, @customer), method: :delete, class: 'btn btn-danger margin1top', data: { confirm: 'Etes-vous sûr de vouloir déconnecter le scanner ?' }
                - elsif @customer.dematbox.try(:beginning_configuration_at).present?
                  Configuration en cours...veuillez recharger votre page dans quelques secondes.
                - else
                  Appairez ici un scanner iDocus'Box (Produit Sagemcom). Si vous n'avez pas de scanner,
                  = link_to 'vous pouvez en commander un.', new_account_organization_customer_order_path(@organization, @customer, order: { type: 'dematbox' })
                  %br
                  Afin d'appairer le scanner, merci de suivre les instructions du
                  = link_to "mode d'emploi Sagemcom", docs_download_path(name: 'Livret_utilisation_Dematbox.pdf')
                  fournit lors de la livraison.
                  %br
                  Merci d'inscrire le code d'appairage dans le champ ci-dessous :
                  = form_tag account_organization_customer_dematbox_path(@organization, @customer), method: :post, class: 'form-inline margin2top' do
                    = label_tag :pairing_code, 'Code appairage'
                    = text_field_tag :pairing_code, '', style: 'width:75px;'
                    = submit_tag t('actions.submit'), class: 'btn btn-primary'
            - if @user.is_admin && @customer.active?
              #file_storages.tab-pane{ class: ('active' if params[:tab] == 'file_storages') }
                = render partial: 'account/customers/file_storages', locals: { user: @customer }
                .alignright
                  = link_to icon_edit + ' ' + 'Modifier', edit_account_organization_customer_file_storage_authorizations_path(@organization, @customer), class: 'btn btn-primary'
