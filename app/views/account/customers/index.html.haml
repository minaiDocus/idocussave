#customers
  .row-fluid
    .span12.box
      .pull-left
        %h3 Liste des clients
      .pull-right
        - if @organization.authorized?(@user, :new, :customer)
          = link_to t('actions.new'), new_account_organization_customer_path, class: 'btn btn-primary'
  .row-fluid
    .span9.box
      = render partial: 'list_options'
      .row-fluid
        .span12
          %table.table.table-bordered.table-condensed.table-striped.margin1top.margin0bottom
            %thead
              %tr
                %th
                %th.date= sortable :created_at, t('mongoid.models.common.attributes.created_at')
                %th= sortable :code, t('mongoid.models.user.attributes.formatted_identifier')
                %th
            %tbody
              - @customers.each do |customer|
                %tr
                  %td.active_state
                    - if customer.is_inactive
                      = icon(icon: 'remove')
                    - elsif !@organization.authorized?(@user, :edit, :customer, customer)
                      = icon(icon: 'lock')
                  %td.date= customer.created_at.strftime('%d/%m/%Y %H:%M')
                  %td.user_info
                    %span.info
                      = link_to customer.info, account_organization_customer_path(customer)
                    - unless params[:with_details] == "false"
                      %ul.subscription_info
                        - period = @periods.select { |e| e.user == customer }.first
                        - if period
                          - period.product_option_orders.each do |option|
                            %li
                              = option.group_title
                              \:
                              = option.title
                  %td.update_request_state
                    - if !customer.is_inactive && customer.request_type && customer.request_type.is_a?(Integer)
                      - if customer.request_type == User::ADDING
                        = icon(icon: 'plus', title: 'Ajouté')
                      - elsif customer.request_type == User::UPDATING
                        = icon(icon: 'pencil', title: 'Modifié')
                      - elsif customer.request_type == User::REMOVING
                        = icon(icon: 'minus', title: 'Supprimé')
      = render partial: 'list_options'
    .span3.box
      = render partial: 'sidebar'