.row-fluid
  %h3 Filtres

  = form_tag account_organization_customers_path(@organization), method: :get, class: 'form form-vertical margin0bottom' do
    %br
    = hidden_field_tag :direction, sort_direction
    = hidden_field_tag :sort, sort_column
    = hidden_field_tag :per_page, per_page
    = hidden_field_tag :with_details, params[:with_details] || true
    = label_tag 'user_contains[company]', t('activerecord.models.user.attributes.company')
    = text_field_tag 'user_contains[company]', (params[:user_contains][:company] rescue ''), class: 'span12'
    = label_tag 'user_contains[code]', t('activerecord.models.user.attributes.code')
    = text_field_tag 'user_contains[code]', (params[:user_contains][:code] rescue ''), class: 'span12'
    = label_tag 'user_contains[last_name]', t('activerecord.models.user.attributes.last_name')
    = text_field_tag 'user_contains[last_name]', (params[:user_contains][:last_name] rescue ''), class: 'span12'
    = label_tag 'user_contains[first_name]', t('activerecord.models.user.attributes.first_name')
    = text_field_tag 'user_contains[first_name]', (params[:user_contains][:first_name] rescue ''), class: 'span12'
    = label_tag 'user_contains[email]', t('activerecord.models.user.attributes.email')
    = text_field_tag 'user_contains[email]', (params[:user_contains][:email] rescue ''), class: 'span12'
    - if @user.leader?
      = label_tag 'collaborator_id', 'Collaborateur'
      = select_tag 'collaborator_id', options_from_collection_for_select(@organization.collaborators.order(code: :asc), :id, :code, params[:collaborator_id]), include_blank: true
    = label_tag 'group_ids[]', t('activerecord.models.group.name').pluralize
    - if @groups.size > 0
      - @groups.each do |group|
        = check_box_tag 'group_ids[]', group.id, (params[:group_ids].include?(group.id) rescue false), id: "group_ids_#{group.id}", class: 'no-relative', style: 'margin:0 5px 0 0'
        %label{ for: "group_ids_#{group.id}" }= group
    - else
      %i [Aucun groupe]
    = label_tag 'user_contains[is_inactive]', t('activerecord.models.user.attributes.is_inactive')
    = select_tag 'user_contains[is_inactive]', options_for_select([[t('yes_value'), 1], [t('no_value'), 0]], (params[:user_contains][:is_inactive] rescue '')), include_blank: true
    %br
    %br
    = submit_tag t('filters.action'), class: 'btn btn-primary'
    = link_to t('filters.reset'), account_organization_customers_path(@organization), class: 'btn'
