.block
  .secondary-navigation
    %ul.wat-cf
      %li.first!= link_to "All orders", admin_orders_path
      %li!= link_to "Add order", new_admin_order_path
  .content
    %h2.title
      Editing order
      != @order.number
      options
    .inner
      %h3 Liste des options actuel
      %table.table
        %tr
          %th.first
          %th Titre
          %th Prix
          %th Durée
          %th.last
        - @order.product_order.product_option_order.each do |option|
          %tr
            %td
            %td!= option.title
            %td
              #{format_price option.price_in_cents_wo_vat} € HT
              %br
              %small
                #{format_price(option.price_in_cents_wo_vat * 1.196)} € TTC
            %td!= option.duration
            %td
          
      %h3 Selectionner ci-dessous les nouvelles options
      
      %form{ :method => "POST", :action => update_option_admin_order_path }
        - @product = Product.where(:title => @order.product_order.title).first
        
        - p = Proc.new do |group, block|
          .group{ :id => group.id }
            .title.margin05top.margin05bottom
              != group.title + " " + group.description
            !=hidden_field_tag "#{group.id}_DependantIds", group.required_for.collect{|g| g.id}.join('-')
            - if group.subgroups
              - group.subgroups.by_position.each do |subgroup|
                - block.call(subgroup, block)
            - unless group.product_options.empty?
              - if group.is_option_dependent
                %li
                  - group.product_options.by_position.each_with_index do |option,index|
                    .row
                      %span.radio
                        !=radio_button_tag("option_#{group.id}", option.id, ((index == 0)? true : false), :id => option.id, :class => "option" )
                        !=hidden_field_tag "option_#{option.id}_quantity", option.quantity
                      %span.product
                        %label{ :for => option.id }
                          != option.title
                        != (option.description == "")? "" : " - #{option.description}"
                      - if option.price_in_cents_wo_vat > 0
                        %span.price
                          %input{ :type => :hidden, :class => "original_option_price", :name => "original_option_price", :value => format_price(option.price_in_cents_wo_vat) }/
                          %span
                            #{format_price option.price_in_cents_wo_vat}
                          € HT
                      - else
                        %span.price
                          %strong
                            -
              - else
                %li
                  - group.product_options.each do |option|
                    .row
                      %span.checkbox
                        %input{ :type => :checkbox, :name => "option_#{group.id}_#{option.id}", :value => option.id, :id => option.id, :class => "option" }
                        !=hidden_field_tag "option_#{option.id}_quantity", option.quantity
                      %span.product
                        %label{ :for => option.id }
                          != option.title
                          != (option.description == "")? "" : " - #{option.description}"
                      - if option.price_in_cents_wo_vat > 0
                        %span.price
                          %input{ :type => :hidden, :class => "original_option_price", :name => "original_option_price", :value => format_price(option.price_in_cents_wo_vat) }/
                          %span
                            #{format_price option.price_in_cents_wo_vat}
                          € HT
                      - else
                        %span.price
                          %strong
                            -
                    
        - @product.groups.where(:supergroup_id => nil).by_position.entries.each do |group|
          .h-separator.light.margin2top.margin1bottom
          %ul.optionslist.margin2left.margin2top
            - p.call(group, p)
        
        %input{ :type => :hidden, :name => :product_id, :value => @product.id }
        
        - @product.groups.where(:supergroup_id => nil).by_position.entries.each do |group|
          %span.title
            !=group.title
          %span.price{ :id => "cart_total_wo_vat_#{group.id}" }
          %span.infos{ :id => "cart_total_w_vat_#{group.id}" }
          %br
      
        .group.navform.wat-cf
          %button.button{:type => 'submit'}
            != image_tag("web-app-theme/tick.png", :alt => "Save")
            Save
          != link_to image_tag("web-app-theme/cross.png", :alt => "Cancel") + "Cancel", admin_order_path(@order), :class => "button"
      
- content_for :sidebar, render(:partial => 'sidebar')

:javascript
  var group_ids = [#{@product.groups.where(:supergroup_id => nil).by_position.entries.collect{|g| "'"+g.id.to_s+"'"}.join(',')}];
  function set_total_price(){
    for (i in group_ids){
      var total = 0;
      $("#"+group_ids[i]).find("input[type=radio]:checked").each(function(){
        total += parseInt($(this).parents(".row").find(".price > span").text());
      });
      $("#"+group_ids[i]).find("input[type=checkbox]:checked").each(function(){
        total += parseInt($(this).parents(".row").find(".price > span").text());
      });
      var total_w_vat = total * 1.196
      $("#cart_total_w_vat_"+group_ids[i]).text(total_w_vat.toFixed(2) + "€ TTC");
      $("#cart_total_wo_vat_"+group_ids[i]).text(total + "€ HT");
    }
  }
  $(document).ready(function(){
    set_total_price();
    $("input.option").change(function(){
      id = $(this).attr("id");
      quantity = $("#option_"+id+"_quantity").val();
      id = $(this).parents(".group").attr("id");
      if ($("#"+id+"_DependantIds").val() != ""){
        ids = $("#"+id+"_DependantIds").val().split(/-/);
        if( ids.length != 0 ){
          for(i=0; i < ids.length; i++){
            group = $("#"+ids[i]);
            group.find("li > div").each(function(){
              option_price = $(this).children("span.price");
              price = option_price.children("input").val();
              new_price = price * quantity;
              option_price.children("span").text(new_price);
            });
          }
        }
      }
      set_total_price();
    });
  });