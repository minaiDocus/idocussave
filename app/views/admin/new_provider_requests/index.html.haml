#new_provider_requests
  .row
    .col-12
      .box.small-shadow.clearfix
        = render 'layouts/admin/retriever/navigation'

  .row
    .col-md-12
      .box.clearfix
        .float-left
          %h3
            Liste des demandes de nouveaux fournisseurs
            %span.badge.badge-info.fs-origin= @new_provider_requests_count

  .row.retractable.with-filter
    .col-md-12
      .box
        .row
          .col.mt-4
            = render partial: 'shared/list_options', locals: { collection: @new_provider_requests }
        %table.table.table-condensed.table-striped.margin1top.margin0bottom.table-detachable-head.table-bordered-inner
          %thead
            %tr.bg-brown.text-white
              %th= sortable :created_at,    t('activerecord.models.common.attributes.created_at')
              %th= sortable :updated_at,    t('activerecord.models.common.attributes.updated_at')
              %th= sortable :user_id,       t('activerecord.models.user.name')
              %th= sortable :state,         t('activerecord.models.new_provider_request.attributes.state')
              %th= sortable :api_id,        t('activerecord.models.new_provider_request.attributes.api_id')
              %th= sortable :name,          t('activerecord.models.new_provider_request.attributes.name')
              %th= sortable :notified_at,   t('activerecord.models.new_provider_request.attributes.notified_at')
              %th= sortable :processing_at, t('activerecord.models.new_provider_request.attributes.processing_at')
              %th Actions
          %tbody.retractable.slidedown
            - @new_provider_requests.each do |new_provider_request|
              %tr
                %td= l(new_provider_request.created_at, format: '%d %b %Y %H:%M')
                %td= l(new_provider_request.updated_at, format: '%d %b %Y %H:%M')
                %td= link_to new_provider_request.user.code, [:admin, new_provider_request.user]
                %td= new_provider_request_state(new_provider_request)
                %td
                  - if new_provider_request.api_id.present?
                    = link_to new_provider_request.api_id, [:admin, new_provider_request]
                %td= link_to new_provider_request.name, [:admin, new_provider_request]
                %td= l(new_provider_request.notified_at, format: '%d %b %Y %H:%M') rescue nil
                %td= l(new_provider_request.processing_at, format: '%d %b %Y %H:%M') rescue nil
                %td
                  - if new_provider_request.processing?
                    = link_to glyphicon('check'), accept_admin_new_provider_request_path(new_provider_request), method: 'patch', class: 'btn btn-light', data: { confirm: t('actions.confirm') }, title: 'Accepter'
                  - if new_provider_request.processing?
                    = link_to glyphicon('x'), edit_admin_new_provider_request_path(new_provider_request), class: 'btn btn-light', title: 'Rejeter'
        %br
        .row
          .col.mb-4
            = render partial: 'shared/list_options', locals: { collection: @new_provider_requests }
    = render partial: 'sidebar'
