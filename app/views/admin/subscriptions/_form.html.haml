/
  Uniquement pour le prélèvement
  %br
  .group
    %label{ :id => "amount_in_cents", :class => :label }
      Montant (cents) *
    %input{ :type => "texte", :name => "amount_in_cents", :class => 'text_field', :id => "amount_in_cents" }
    
.group
  %ul.optionslist.margin2left.margin2top
    - if @step == 1
      - @products.each_with_index do |product,index|
        %li
          .row
            %span.radio
              !=radio_button_tag("product_id", product.id, ((index == 0)? true : false), :id => product.id, :class => "product_item" )
            %span.product
              %strong
                %label{ :for => product.id }
                  !=product.title
              != (product.description == "")? "" : " #{product.description}"
            - if product.price_in_cents_w_vat > 0
              %span.price
                %strong
                  #{format_price product.price_in_cents_wo_vat} € HT
                %span.smaller
                  #{format_price product.price_in_cents_w_vat} € TTC
    - elsif @step == 2
      %input{ :type => :hidden, :name => :product_id, :value => @product.id }
      %h2.margin2top
        #{(@product.category == 1)? "Numérisation : " : "Sauvegarde : "}
        != @product.title
      
      - p = Proc.new do |product_group, block|
        .group{ :id => product_group.id }
          .title.margin05top.margin05bottom
            != product_group.title + " " + product_group.description
          !=hidden_field_tag "#{product_group.id}_DependantIds", product_group.product_required_for.collect{|g| g.id}.join('-')
          - if product_group.product_subgroups
            - product_group.product_subgroups.by_position.each do |product_subgroup|
              - block.call(product_subgroup, block)
          - unless product_group.product_options.empty?
            - if product_group.is_option_dependent
              %li
                - product_group.product_options.by_position.each_with_index do |option,index|
                  .row
                    %span.radio
                      !=radio_button_tag("option_#{product_group.id}", option.id, ((index == 0)? true : false), :id => option.id, :class => "option" )
                      !=hidden_field_tag "option_#{option.id}_quantity", option.quantity
                    %span.product
                      %label{ :for => option.id }
                        != option.title
                      != (option.description == "")? "" : " - #{option.description}"
                    %span.price
                      %input{ :type => :hidden, :class => "original_option_price", :name => "original_option_price", :value => format_price(option.price_in_cents_wo_vat) }/
                      %span.value{ :class => ((option.price_in_cents_wo_vat > 0)? "" : "hide") }
                        #{format_price(option.price_in_cents_wo_vat) + " "}
                      %span{ :class => ((option.price_in_cents_wo_vat > 0)? "" : "hide") }
                        € HT
            - else
              %li
                - product_group.product_options.each do |option|
                  .row
                    %span.checkbox
                      %input{ :type => :checkbox, :name => "option_#{product_group.id}_#{option.id}", :value => option.id, :id => option.id, :class => "option" }
                      !=hidden_field_tag "option_#{option.id}_quantity", option.quantity
                    %span.product
                      %label{ :for => option.id }
                        != option.title
                        != (option.description == "")? "" : " - #{option.description}"
                    %span.price
                      %input{ :type => :hidden, :class => "original_option_price", :name => "original_option_price", :value => format_price(option.price_in_cents_wo_vat) }/
                      %span.value{ :class => ((option.price_in_cents_wo_vat > 0)? "" : "hide") }
                        #{format_price(option.price_in_cents_wo_vat) + " "}
                      %span{ :class => ((option.price_in_cents_wo_vat > 0)? "" : "hide") }
                        € HT
                        
      - @product.product_groups.where(:product_supergroup_id => nil).by_position.entries.each do |product_group|
        %ul.optionslist.margin2left.margin2top
          - p.call(product_group, p)
          
    - elsif @step == 3
      %input{ :type => :hidden, :name => :product_id, :value => @product.id }
      %input{ :type => :hidden, :name => :option_ids, :value => @option_ids.join(' ') }
      
      %h2.margin2top
        Récapitulatif de la commande
      
      - total_in_cents_wo_vat = 0.0
      .group
        %span.product
          %strong
            #{ (@product.category == 1)? "Numérisation" : "Sauvegarde" } : #{ @product.title }
        - if @product.price_in_cents_wo_vat > 0
          %span.price
            %strong
              #{format_price @product.price_in_cents_wo_vat} € HT
            %span.smaller
              #{format_price @product.price_in_cents_w_vat} € TTC
              - total_in_cents_wo_vat += @product.price_in_cents_wo_vat
        
      - total = 0
      - p = Proc.new do |product_group, block|
        - if !product_group.product_options.empty?
          - options = product_group.product_options.any_in(:_id => @options.collect{|o| o.id}).entries
          - unless options.empty?
            .group.margin1top
              != product_group.title
              - options.each do |option|
                .row
                  %span.product
                    %div
                      != option.title
                  - if option.price_in_cents_wo_vat > 0
                    %span.price
                      - quantity = 1
                      - if option.product_group && option.product_group.product_require
                        - quantity = option.product_group.product_require.product_options.any_in(:_id => @options.collect{|o| o.id}).first.quantity
                      #{format_price option.price_in_cents_wo_vat * quantity} € HT
                      - total_in_cents_wo_vat += option.price_in_cents_wo_vat * quantity
                      - total += option.price_in_cents_wo_vat * quantity
        - elsif !product_group.product_subgroups.empty?
          .group.margin1top
            %strong
              != product_group.title
        - if product_group.product_subgroups
          - product_group.product_subgroups.by_position.each do |product_subgroup|
            - block.call(product_subgroup, block)
        
      - @product.product_groups.where(:product_supergroup_id => nil).entries.each do |product_group|
        - total = 0
        .group
          - p.call(product_group,p)
          .group.margin1top
            .row
              %span.caption
                %strong
                  Total :
              %span.price
                %strong
                  #{format_price total} € HT
            .row
              %span.caption
              %span.price
                %span.smaller
                  #{format_price (total * 1.196)} € TTC
                  
      .group
        != check_box_tag :is_new_option_entry, "true", false, :class => 'checkbox floattoleft'
        != label_tag :is_new_option_entry, "Nouvelle entrée ?", :class => :label
        %br
        != check_box_tag :is_parent_option, "true", false, :class => 'checkbox floattoleft'
        != label_tag :is_parent_option, "Propager les changements pour tout les clients ?", :class => :label
        
.group.navform.wat-cf
  %button.button{:type => 'submit'}
    != image_tag("web-app-theme/tick.png", :alt => "Save")
    Save
  != link_to image_tag("web-app-theme/cross.png", :alt => "Cancel") + "Cancel", admin_subscriptions_path, :class => "button"

.group
  %em
    %b *
    mandatory fields.

:css
  .floattoleft {
    float: left; }