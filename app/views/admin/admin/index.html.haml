#dashboard
  .row-fluid
    .span8
      .panel
        .panel-header
          %h3 Flux de traitement
        %hr.margin0top
        .panel-body
          .tabbable.tabs-left
            %ul.nav.nav-tabs
              %li
                %a{ href: '#ocr_needed_temp_packs', data: { toggle: 'tab' } }
                  %span.label.label-success OCR
                  %span.badge.badge-success -
              %li
                %a{ href: '#bundle_needed_temp_packs', data: { toggle: 'tab' } }
                  %span.label Regroupement
                  %span.badge -
              %li.active
                %a{ href: '#bundling_temp_packs', data: { toggle: 'tab' } }
                  %span.label.label-success Regroupement
                  %span.badge.badge-success -
              %li
                %a{ href: '#processing_temp_packs', data: { toggle: 'tab' } }
                  %span.label.label-success Publication
                  %span.badge.badge-success -
              %li
                %a{ href: '#currently_being_delivered_packs', data: { toggle: 'tab' } }
                  %span.label.label-success Livraison
                  %span.badge.badge-success -
              %li
                %a{ href: '#failed_packs_delivery', data: { toggle: 'tab' } }
                  %span.label.label-important Livraison
                  %span.badge.badge-important -
              %li
                %a{ href: '#blocked_pre_assignments', data: { toggle: 'tab' } }
                  %span.label Pré-affectation
                  %span.badge -
              %li
                %a{ href: '#awaiting_pre_assignments', data: { toggle: 'tab' } }
                  %span.label.label-success Pré-affectation
                  %span.badge.badge-success -
              %li
                %a{ href: '#reports_delivery', data: { toggle: 'tab' } }
                  %span.label.label-success Livr. Pré-aff.
                  %span.badge.badge-success -
              %li
                %a{ href: '#failed_reports_delivery', data: { toggle: 'tab' } }
                  %span.label.label-important Livr. Pré-aff.
                  %span.badge.badge-important -
            .tab-content
              #ocr_needed_temp_packs.tab-pane
              #bundle_needed_temp_packs.tab-pane
              #bundling_temp_packs.tab-pane.active
              #processing_temp_packs.tab-pane
              #currently_being_delivered_packs.tab-pane
              #failed_packs_delivery.tab-pane
              #blocked_pre_assignments.tab-pane
              #awaiting_pre_assignments.tab-pane
              #reports_delivery.tab-pane
              #failed_reports_delivery.tab-pane
    .span4
      - cache 'admin_right_panels', expires_in: 5.minutes do
        .row-fluid
          .span6
            %h3.label{ style: 'padding:3px 5px 3px;' } Traitement des documents
            %table.table.table-striped.table-condensed.table-bordered
              %tbody
                %tr
                  %th Corrompus
                  %td= StatisticsManager.get_statistic('unreadable_temp_documents_count')
                %tr
                  %th Bloqués
                  %td= StatisticsManager.get_statistic('locked_temp_documents_count')
                %tr
                  %th En attente de sélection
                  %td= StatisticsManager.get_statistic('wait_selection_temp_documents_count')
                %tr
                  %th OCR
                  %td= StatisticsManager.get_statistic('ocr_needed_temp_documents_count')
                %tr
                  %th A regrouper
                  %td= StatisticsManager.get_statistic('bundle_needed_temp_documents_count')
                %tr
                  %th Prêt à être intégrés
                  %td= StatisticsManager.get_statistic('ready_temp_documents_count')
                %tr
                  %th Traités
                  %td= StatisticsManager.get_statistic('processed_temp_documents_count')
          .span6
            %h3.label{ style: 'padding:3px 5px 3px;' } Livraison des documents
            %table.table.table-striped.table-condensed.table-bordered
              %thead
                %tr
                  %th Service
                  %th Restant
                  %th Echoué
              %tbody
                %tr
                  %td Dropbox Ext.
                  %td= StatisticsManager.get_statistic('not_processed_retryable_dropbox_extentended_remote_files_count')
                  %td= StatisticsManager.get_statistic('not_processed_not_retryable_dropbox_extentended_remote_files_count')
                %tr
                  %td Dropbox
                  %td= StatisticsManager.get_statistic('not_processed_retryable_dropbox_remote_files_count')
                  %td= StatisticsManager.get_statistic('not_processed_not_retryable_dropbox_remote_files_count')
                %tr
                  %td Google Drive
                  %td= StatisticsManager.get_statistic('not_processed_retryable_google_drive_extentend_remote_files_count')
                  %td= StatisticsManager.get_statistic('not_processed_not_retryable_google_drive_extentend_remote_files_count')
                %tr
                  %td Box
                  %td= StatisticsManager.get_statistic('not_processed_retryable_box_extentend_remote_files_count')
                  %td= StatisticsManager.get_statistic('not_processed_not_retryable_box_extentend_remote_files_count')
                %tr
                  %td FTP
                  %td= StatisticsManager.get_statistic('not_processed_retryable_ftp_remote_files_count')
                  %td= StatisticsManager.get_statistic('not_processed_not_retryable_ftp_remote_files_count')
                %tr
                  %td Knowings
                  %td= StatisticsManager.get_statistic('not_processed_not_retryable_knowings_remote_files_count')
                  %td= StatisticsManager.get_statistic('not_processed_retryable_knowings_extentend_remote_files_count')
        .row-fluid
          .span6
            %h3.label{ style: 'padding:3px 5px 3px;' } Récupérateurs automatiques
            %table.table.table-striped.table-condensed.table-bordered
              %tbody
                %tr
                  %th Total récupérateurs
                  %td= StatisticsManager.get_statistic('retrievers_count')
                %tr
                  %th Total client (Actif)
                  %td
                    = StatisticsManager.get_statistic('retriever_users_count')
                    (#{StatisticsManager.get_statistic('active_retriever_users_count')})
                %tr
                  %th= Retriever.state_machine.states['ready'].human_name
                  %td= StatisticsManager.get_statistic('retrievers_ready_count')
                %tr
                  %th= Retriever.state_machine.states['waiting_selection'].human_name[0..18] + '.'
                  %td= StatisticsManager.get_statistic('retrievers_waiting_selections_count')
                %tr
                  %th= 'En erreur'
                  %td= StatisticsManager.get_statistic('retrievers_errors_count')
                %tr
                  %th Données en cours de tr.
                  %td
                    = StatisticsManager.get_statistic('retrieved_data_not_processed_count')
                    (#{StatisticsManager.get_statistic('retrieved_data_errors_count')})
          .span6
            %h3.label{ style: 'padding:3px 5px 3px;' } Etat des pages
            %table.table.table-striped.table-condensed.table-bordered
              %tbody
                %tr
                  %th Total
                  %td= StatisticsManager.get_statistic('documents_count')
                %tr
                  %th Numérisés
                  %td= StatisticsManager.get_statistic('scanned_documents_count')
                %tr
                  %th Téléversés (OCR)
                  %td
                    = StatisticsManager.get_statistic('uploaded_documents_count')
                    (#{StatisticsManager.get_statistic('ocr_layer_applied_temp_documents_count')})
                %tr
                  %th Num. Dematbox
                  %td= StatisticsManager.get_statistic('dematbox_scanned_documents_count')
                %tr
                  %th Auto
                  %td= StatisticsManager.get_statistic('retrieved_documents_count')
                %tr
                  %th Vignettes rest.
                  %td= StatisticsManager.get_statistic('not_clean_not_mixed_documents_count')
                %tr
                  %th Extractions rest.
                  %td= StatisticsManager.get_statistic('not_extracted_not_mixed_documents_count')
        .row-fluid
          .span12
            %h3.label{ style: 'padding:3px 5px 3px;' } Opérations bancaires
            .row-fluid
              .span6
                %table.table.table-striped.table-condensed.table-bordered
                  %tbody
                    %tr
                      %th Total
                      %td= StatisticsManager.get_statistic('operations_count')
                    %tr
                      %th Automate
                      %td= StatisticsManager.get_statistic('retrieved_operations_count')
                    %tr
                      %th Import
                      %td= StatisticsManager.get_statistic('other_operations_count')
              .span6
                %table.table.table-striped.table-condensed.table-bordered
                  %tbody
                    %tr
                      %th Traités
                      %td= StatisticsManager.get_statistic('processed_operations_count')
                    %tr
                      %th En attente
                      %td= StatisticsManager.get_statistic('not_processed_not_locked_operations_count')
                    %tr
                      %th Bloqués
                      %td= StatisticsManager.get_statistic('not_processed_locked_operations_count')
      .row-fluid
        .span12
          %h3.label{ style: 'padding:3px 5px 3px;' } Demande de nouveaux fournisseurs en cours
          %table.table.table-striped.table-condensed.table-bordered
            %thead
              %th Date
              %th Client
              %th Nom
              %th Etat
            %tbody
              - @new_provider_requests.each do |new_provider_request|
                %tr
                  %td= l(new_provider_request.created_at, format: '%e %b %H:%M')
                  %td= link_to new_provider_request.user.code, account_new_provider_requests_path(user_code: new_provider_request.user.code)
                  %td= new_provider_request.name
                  %td= new_provider_request_state(new_provider_request)
      .row-fluid
        .span12
          %h3.label{ style: 'padding:3px 5px 3px;' } Organisations facturées n'ayant pas d'adresse de facturation
          .well
            - @unbillable_organizations.each do |organization|
              = link_to organization, account_organization_path(organization, tab: 'addresses'), class: 'label label-important'
